//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PASAROperations.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PASAROperationEntities : DbContext
    {
        public PASAROperationEntities()
            : base("name=PASAROperationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Campaign> Campaigns { get; set; }
        public DbSet<ChargeType> ChargeTypes { get; set; }
        public DbSet<Converter> Converters { get; set; }
        public DbSet<CycleStat> CycleStats { get; set; }
        public DbSet<ActivityType> ActivityTypes { get; set; }
        public DbSet<EmployeeRole> EmployeeRoles { get; set; }
        public DbSet<Cycle> Cycles { get; set; }
        public DbSet<CycleLog> CycleLogs { get; set; }
        public DbSet<VWConverterCamp> VWConverterCamps { get; set; }
        public DbSet<VWCycleDetail> VWCycleDetails { get; set; }
        public DbSet<VWCycleRecent> VWCycleRecents { get; set; }
        public DbSet<Tuyere> Tuyeres { get; set; }
        public DbSet<TuyereNumber> TuyereNumbers { get; set; }
        public DbSet<TuyereState> TuyereStates { get; set; }
        public DbSet<VWOperator> VWOperators { get; set; }
        public DbSet<VWSkimmer> VWSkimmers { get; set; }
        public DbSet<VWSupervisor> VWSupervisors { get; set; }
        public DbSet<TeamShift> TeamShifts { get; set; }
        public DbSet<VWCFEmployee> VWCFEmployees { get; set; }
        public DbSet<VWEmployeeShiftSched> VWEmployeeShiftScheds { get; set; }
        public DbSet<TimeUsage> TimeUsages { get; set; }
        public DbSet<CycleStage> CycleStages { get; set; }
        public DbSet<Stage> Stages { get; set; }
        public DbSet<VWCycleStage> VWCycleStages { get; set; }
        public DbSet<VWCycleActiveStage> VWCycleActiveStages { get; set; }
        public DbSet<ShiftSched> ShiftScheds { get; set; }
        public DbSet<TeamTypeShift> TeamTypeShifts { get; set; }
        public DbSet<TypeShift> TypeShifts { get; set; }
        public DbSet<VWTeamTypeShift> VWTeamTypeShifts { get; set; }
        public DbSet<ActivityCode> ActivityCodes { get; set; }
        public DbSet<VWActivitySequence> VWActivitySequences { get; set; }
        public DbSet<Activity> Activities { get; set; }
        public DbSet<ChangelogSilicaFormula> ChangelogSilicaFormulas { get; set; }
        public DbSet<DefaultSilicaFormula> DefaultSilicaFormulas { get; set; }
        public DbSet<SilicaFormula> SilicaFormulas { get; set; }
        public DbSet<SilicaFormulaVariable> SilicaFormulaVariables { get; set; }
        public DbSet<VWProcess> VWProcesses { get; set; }
        public DbSet<VWChangeLog> VWChangeLogs { get; set; }
        public DbSet<ChangeType> ChangeTypes { get; set; }
        public DbSet<VWChangelogSetDefault> VWChangelogSetDefaults { get; set; }
        public DbSet<VWCycleTotalDuration> VWCycleTotalDurations { get; set; }
        public DbSet<EmployeeAssignStage> EmployeeAssignStages { get; set; }
        public DbSet<EmployeeRoleStage> EmployeeRoleStages { get; set; }
        public DbSet<VWEmployeeAssignStageDetail> VWEmployeeAssignStageDetails { get; set; }
        public DbSet<VWEmployeeperStageAssign> VWEmployeeperStageAssigns { get; set; }
        public DbSet<VWCFData> VWCFDatas { get; set; }
        public DbSet<VWCFData_All> VWCFData_All { get; set; }
        public DbSet<VWCFData_AllStage> VWCFData_AllStage { get; set; }
        public DbSet<VWCFData_Cublow> VWCFData_Cublow { get; set; }
        public DbSet<VWCFData_SlagBlow> VWCFData_SlagBlow { get; set; }
        public DbSet<VWTuyere> VWTuyeres { get; set; }
        public DbSet<test> tests { get; set; }
        public DbSet<VWMatteGrade_New> VWMatteGrade_New { get; set; }
        public DbSet<VWMatteGrade_NOFILTER> VWMatteGrade_NOFILTER { get; set; }
        public DbSet<VWMatteGrade_Sequence> VWMatteGrade_Sequence { get; set; }
        public DbSet<VWMatteGrade_TheView> VWMatteGrade_TheView { get; set; }
        public DbSet<VWFSFE_Employee> VWFSFE_Employee { get; set; }
        public DbSet<FSFE_Bed> FSFE_Bed { get; set; }
        public DbSet<FSFE_KPI_Val> FSFE_KPI_Val { get; set; }
        public DbSet<FSFE_OnboardCrew> FSFE_OnboardCrew { get; set; }
        public DbSet<FSFE_Param_Type> FSFE_Param_Type { get; set; }
        public DbSet<FSFE_RegularCrew> FSFE_RegularCrew { get; set; }
        public DbSet<FSFE_Role_Type> FSFE_Role_Type { get; set; }
        public DbSet<FSFE_MatteTapperCrew> FSFE_MatteTapperCrew { get; set; }
        public DbSet<VWFSFE_MatteTapper> VWFSFE_MatteTapper { get; set; }
        public DbSet<VWFSFE_RegularCrew> VWFSFE_RegularCrew { get; set; }
        public DbSet<FSFE_Param_Val> FSFE_Param_Val { get; set; }
        public DbSet<FSFE_SPOTap_MatteSlag> FSFE_SPOTap_MatteSlag { get; set; }
        public DbSet<VWFSFE_SPOTap_MatteSlag> VWFSFE_SPOTap_MatteSlag { get; set; }
        public DbSet<FSFE_Prod> FSFE_Prod { get; set; }
        public DbSet<FSFE_Checklist_Val> FSFE_Checklist_Val { get; set; }
        public DbSet<FSFE_Param> FSFE_Param { get; set; }
        public DbSet<FSFE_ParamGroup> FSFE_ParamGroup { get; set; }
        public DbSet<FSFE_FII_Guideline> FSFE_FII_Guideline { get; set; }
        public DbSet<FSFE_FPatternFII_Val> FSFE_FPatternFII_Val { get; set; }
        public DbSet<VWFSFE_FII> VWFSFE_FII { get; set; }
        public DbSet<VWFSFE_FPATTERN_FII> VWFSFE_FPATTERN_FII { get; set; }
        public DbSet<VWFSFE_ASSIGNSHIFT> VWFSFE_ASSIGNSHIFT { get; set; }
        public DbSet<VWFSFE_OnboardCrew> VWFSFE_OnboardCrew { get; set; }
        public DbSet<VWFSFE_SlagTapping> VWFSFE_SlagTapping { get; set; }
        public DbSet<FSFE_SlagTap> FSFE_SlagTap { get; set; }
        public DbSet<FSFE_Matte_Tapping> FSFE_Matte_Tapping { get; set; }
        public DbSet<VWCF_CuR_AverageMG_TheoreticalS> VWCF_CuR_AverageMG_TheoreticalS { get; set; }
        public DbSet<VWCF_CuRecovery> VWCF_CuRecovery { get; set; }
        public DbSet<VWCF_CuRecovery_X1> VWCF_CuRecovery_X1 { get; set; }
        public DbSet<VWCF_CuRecovery_X2> VWCF_CuRecovery_X2 { get; set; }
        public DbSet<VWCF_TheoSilica> VWCF_TheoSilica { get; set; }
        public DbSet<VWFSFE_MatteTapping> VWFSFE_MatteTapping { get; set; }
        public DbSet<WVCF_SequenceGroupBy> WVCF_SequenceGroupBy { get; set; }
        public DbSet<ActivityCodeType> ActivityCodeTypes { get; set; }
        public DbSet<AF_BlisterReceive> AF_BlisterReceive { get; set; }
        public DbSet<AF_Lot> AF_Lot { get; set; }
        public DbSet<AF_Num> AF_Num { get; set; }
        public DbSet<AF_Page> AF_Page { get; set; }
        public DbSet<AF_Param> AF_Param { get; set; }
        public DbSet<AF_Param_DTime_Val> AF_Param_DTime_Val { get; set; }
        public DbSet<AF_Param_Emp_Val> AF_Param_Emp_Val { get; set; }
        public DbSet<AF_Param_Num_Val> AF_Param_Num_Val { get; set; }
        public DbSet<AF_Param_Type> AF_Param_Type { get; set; }
        public DbSet<AF_ParamGroup1> AF_ParamGroup1 { get; set; }
        public DbSet<AF_ParamGroup2> AF_ParamGroup2 { get; set; }
        public DbSet<AF_QIG_Emp_Val> AF_QIG_Emp_Val { get; set; }
        public DbSet<AF_QIG_Val> AF_QIG_Val { get; set; }
        public DbSet<AF_Status> AF_Status { get; set; }
        public DbSet<FSFE_KPITarget_Val> FSFE_KPITarget_Val { get; set; }
        public DbSet<Operation_Department> Operation_Department { get; set; }
        public DbSet<ProdMonth> ProdMonths { get; set; }
        public DbSet<ProdYear> ProdYears { get; set; }
        public DbSet<RTDUET_TARGET> RTDUET_TARGET { get; set; }
        public DbSet<RTDuet_TUC> RTDuet_TUC { get; set; }
        public DbSet<SmelPlan_Batch> SmelPlan_Batch { get; set; }
        public DbSet<SmelPlan_Comment> SmelPlan_Comment { get; set; }
        public DbSet<SmelPlan_Default> SmelPlan_Default { get; set; }
        public DbSet<SmelPlan_Param> SmelPlan_Param { get; set; }
        public DbSet<SmelPlan_ParamType> SmelPlan_ParamType { get; set; }
        public DbSet<SmelPlan_Prod> SmelPlan_Prod { get; set; }
        public DbSet<VW_FSFE_KPITarget_ShiftDate> VW_FSFE_KPITarget_ShiftDate { get; set; }
        public DbSet<VWAF_AFNum> VWAF_AFNum { get; set; }
        public DbSet<VWCF_CVForm_CntrlRmEngr> VWCF_CVForm_CntrlRmEngr { get; set; }
        public DbSet<VWCF_CVForm_CuBlow> VWCF_CVForm_CuBlow { get; set; }
        public DbSet<VWCF_CVForm_CycleDetail> VWCF_CVForm_CycleDetail { get; set; }
        public DbSet<VWCF_CVForm_Sequence_Data> VWCF_CVForm_Sequence_Data { get; set; }
        public DbSet<VWCF_CVForm_Sequnce_ActCode> VWCF_CVForm_Sequnce_ActCode { get; set; }
        public DbSet<VWCF_CVForm_SlagBlow> VWCF_CVForm_SlagBlow { get; set; }
        public DbSet<VWCF_CVForm_Supervisor> VWCF_CVForm_Supervisor { get; set; }
        public DbSet<VWCF_CVForm_Time> VWCF_CVForm_Time { get; set; }
        public DbSet<VWCFData_ActDelay_Duration> VWCFData_ActDelay_Duration { get; set; }
        public DbSet<VWFSFE_KPITarget> VWFSFE_KPITarget { get; set; }
        public DbSet<VWFSFE_ShiftDate> VWFSFE_ShiftDate { get; set; }
        public DbSet<AF_Param_Num_Default_TargetVal> AF_Param_Num_Default_TargetVal { get; set; }
        public DbSet<VWAF_Lot_ProdYear> VWAF_Lot_ProdYear { get; set; }
        public DbSet<VWAF_Lot_ProdYearDetail> VWAF_Lot_ProdYearDetail { get; set; }
        public DbSet<VWAF_ParamDetail> VWAF_ParamDetail { get; set; }
        public DbSet<VWAF_BlisterReceive> VWAF_BlisterReceive { get; set; }
        public DbSet<VWAF_Employee> VWAF_Employee { get; set; }
        public DbSet<VWAF_EmployeeDetail> VWAF_EmployeeDetail { get; set; }
        public DbSet<VWAFRefining_DtTime> VWAFRefining_DtTime { get; set; }
        public DbSet<VWAFRefining_Employee> VWAFRefining_Employee { get; set; }
        public DbSet<VWAFRefining_Numeric> VWAFRefining_Numeric { get; set; }
        public DbSet<VWAFRefining_Str> VWAFRefining_Str { get; set; }
        public DbSet<AF_Param_NumMould_Val> AF_Param_NumMould_Val { get; set; }
        public DbSet<VWAFCasting_Employee> VWAFCasting_Employee { get; set; }
        public DbSet<VWAFCasting_Numeric> VWAFCasting_Numeric { get; set; }
        public DbSet<VWCF_PI_FOR_BI> VWCF_PI_FOR_BI { get; set; }
        public DbSet<VWAFCasting_Mould> VWAFCasting_Mould { get; set; }
        public DbSet<AF_QIGHour> AF_QIGHour { get; set; }
        public DbSet<AF_QIGType> AF_QIGType { get; set; }
        public DbSet<VWAFQIG_DATA> VWAFQIG_DATA { get; set; }
        public DbSet<VWAF_LIMSTarget> VWAF_LIMSTarget { get; set; }
        public DbSet<FSF_AssignCrew> FSF_AssignCrew { get; set; }
        public DbSet<FSF_Crew> FSF_Crew { get; set; }
        public DbSet<FSF_Default_Crew> FSF_Default_Crew { get; set; }
        public DbSet<VWFSF_DefaultCrew> VWFSF_DefaultCrew { get; set; }
        public DbSet<AF_CastingWheel> AF_CastingWheel { get; set; }
        public DbSet<VWAF_InspectionCategory> VWAF_InspectionCategory { get; set; }
        public DbSet<VWAF_LotDetail> VWAF_LotDetail { get; set; }
        public DbSet<VWAF_BlisterReceive_Wt> VWAF_BlisterReceive_Wt { get; set; }
        public DbSet<VWAFCasting_Data> VWAFCasting_Data { get; set; }
        public DbSet<AF_Customer> AF_Customer { get; set; }
        public DbSet<AF_Customer_Val> AF_Customer_Val { get; set; }
        public DbSet<VWAF_Customer> VWAF_Customer { get; set; }
        public DbSet<VWAF_QIGOthers> VWAF_QIGOthers { get; set; }
        public DbSet<VWAFRefining_MinMaxDate> VWAFRefining_MinMaxDate { get; set; }
        public DbSet<AF_Param_Str_Val> AF_Param_Str_Val { get; set; }
        public DbSet<AF_Param_Num_TargetVal> AF_Param_Num_TargetVal { get; set; }
        public DbSet<AF_Lot_Target> AF_Lot_Target { get; set; }
        public DbSet<AF_Target_Default> AF_Target_Default { get; set; }
        public DbSet<TestTable> TestTables { get; set; }
        public DbSet<AF_Param_Num_Inv_Val> AF_Param_Num_Inv_Val { get; set; }
        public DbSet<AF_Param_Str_Inv_Val> AF_Param_Str_Inv_Val { get; set; }
        public DbSet<AF_Param_Emp_Inv_Val> AF_Param_Emp_Inv_Val { get; set; }
        public DbSet<VWAF_Lot_Targets> VWAF_Lot_Targets { get; set; }
        public DbSet<VWAFAnode_Inventory_Employee> VWAFAnode_Inventory_Employee { get; set; }
        public DbSet<VWAFCasting_Employee_List> VWAFCasting_Employee_List { get; set; }
        public DbSet<VWAFRefining_Employee_List> VWAFRefining_Employee_List { get; set; }
        public DbSet<VWAF_Targets> VWAF_Targets { get; set; }
        public DbSet<AF_Delay_Reason> AF_Delay_Reason { get; set; }
        public DbSet<AF_Delay_Reason_Group> AF_Delay_Reason_Group { get; set; }
        public DbSet<Energy_MG_Val> Energy_MG_Val { get; set; }
        public DbSet<Energy_Param> Energy_Param { get; set; }
        public DbSet<Energy_Param_Num_Val> Energy_Param_Num_Val { get; set; }
        public DbSet<Energy_ParamGroup1> Energy_ParamGroup1 { get; set; }
        public DbSet<VWAF_DelayReasons> VWAF_DelayReasons { get; set; }
        public DbSet<VWAF_Refining_Delays> VWAF_Refining_Delays { get; set; }
        public DbSet<VWEnergy_Numeric_MG_Val> VWEnergy_Numeric_MG_Val { get; set; }
        public DbSet<VWEnergy_Numeric_Val> VWEnergy_Numeric_Val { get; set; }
        public DbSet<VWAFRefining_Data> VWAFRefining_Data { get; set; }
        public DbSet<AF_Param_Num_Inv_CurrVal> AF_Param_Num_Inv_CurrVal { get; set; }
        public DbSet<AF_Param_Str_Inv_CurrVal> AF_Param_Str_Inv_CurrVal { get; set; }
        public DbSet<VWAFAnode_PreviousInventory> VWAFAnode_PreviousInventory { get; set; }
        public DbSet<VWAFAnode_Inventory> VWAFAnode_Inventory { get; set; }
        public DbSet<VWAF_BlisterReceiving_Delays> VWAF_BlisterReceiving_Delays { get; set; }
        public DbSet<SFP_Consumable_Values> SFP_Consumable_Values { get; set; }
        public DbSet<SFP_Location_Status_Reference> SFP_Location_Status_Reference { get; set; }
        public DbSet<SFP_Param> SFP_Param { get; set; }
        public DbSet<SFP_Param_Locations> SFP_Param_Locations { get; set; }
        public DbSet<SFP_Param_Type> SFP_Param_Type { get; set; }
        public DbSet<SFP_ParamGroup1> SFP_ParamGroup1 { get; set; }
        public DbSet<SFP_Shift> SFP_Shift { get; set; }
        public DbSet<SFP_Target_Values> SFP_Target_Values { get; set; }
        public DbSet<SFP_Target_ValueType> SFP_Target_ValueType { get; set; }
        public DbSet<SFP_Val_Group> SFP_Val_Group { get; set; }
        public DbSet<VWSFP_Consumables_Data> VWSFP_Consumables_Data { get; set; }
        public DbSet<VWSFP_Monitor_Locations> VWSFP_Monitor_Locations { get; set; }
        public DbSet<VWSFP_Monitor_Pots> VWSFP_Monitor_Pots { get; set; }
        public DbSet<VWSFP_Targets_Data> VWSFP_Targets_Data { get; set; }
        public DbSet<SFP_Forecast_Values> SFP_Forecast_Values { get; set; }
        public DbSet<VWSFP_Forecast_Data> VWSFP_Forecast_Data { get; set; }
        public DbSet<SFP_OldSFP_Values> SFP_OldSFP_Values { get; set; }
        public DbSet<VWSFP_OldSFP_Data> VWSFP_OldSFP_Data { get; set; }
        public DbSet<VWSFP_OldSFP_Materials> VWSFP_OldSFP_Materials { get; set; }
        public DbSet<VWSFP_OldSFP_Weighers> VWSFP_OldSFP_Weighers { get; set; }
        public DbSet<SFP_Buckets_Data> SFP_Buckets_Data { get; set; }
        public DbSet<VWSFP_Buckets> VWSFP_Buckets { get; set; }
        public DbSet<VWSFP_Buckets_Data> VWSFP_Buckets_Data { get; set; }
        public DbSet<SFP_Crew> SFP_Crew { get; set; }
        public DbSet<SFP_Default_Crew> SFP_Default_Crew { get; set; }
        public DbSet<SFP_EmployeeRoleType> SFP_EmployeeRoleType { get; set; }
        public DbSet<SFP_Manpower> SFP_Manpower { get; set; }
        public DbSet<SFP_RoleType> SFP_RoleType { get; set; }
        public DbSet<SFP_Shift_AssignCrew> SFP_Shift_AssignCrew { get; set; }
        public DbSet<VWSFP_Employee> VWSFP_Employee { get; set; }
        public DbSet<VWSFP_EmployeePerRole> VWSFP_EmployeePerRole { get; set; }
        public DbSet<VWSFP_Manpower> VWSFP_Manpower { get; set; }
        public DbSet<FSF_Crew_List> FSF_Crew_List { get; set; }
        public DbSet<FSF_Default_Crew_List> FSF_Default_Crew_List { get; set; }
        public DbSet<FSFE_AssignCrew> FSFE_AssignCrew { get; set; }
        public DbSet<FSFE_Crew> FSFE_Crew { get; set; }
        public DbSet<FSFE_DustlineInspection_Val> FSFE_DustlineInspection_Val { get; set; }
        public DbSet<FSFE_Manpower> FSFE_Manpower { get; set; }
        public DbSet<FSFE_Param_Emp_Val> FSFE_Param_Emp_Val { get; set; }
        public DbSet<FSFE_Param_StrVal> FSFE_Param_StrVal { get; set; }
        public DbSet<SmelPlan_TimeSeries> SmelPlan_TimeSeries { get; set; }
        public DbSet<SmelPlan_TimeSeries_NumVal> SmelPlan_TimeSeries_NumVal { get; set; }
        public DbSet<SmelPlan_TimeSeries_StrVal> SmelPlan_TimeSeries_StrVal { get; set; }
        public DbSet<VWFSFE_DustlineInspection_Data> VWFSFE_DustlineInspection_Data { get; set; }
        public DbSet<VWFSFE_EquipmentIssues> VWFSFE_EquipmentIssues { get; set; }
        public DbSet<VWFSFE_FII_Personnel> VWFSFE_FII_Personnel { get; set; }
        public DbSet<VWSPP_DefaultValues> VWSPP_DefaultValues { get; set; }
        public DbSet<VWSPP_GraphSource> VWSPP_GraphSource { get; set; }
        public DbSet<VWSPP_NumericValues> VWSPP_NumericValues { get; set; }
        public DbSet<VWSPP_StringValues> VWSPP_StringValues { get; set; }
        public DbSet<VWSPP_TimeSeries_NumVal> VWSPP_TimeSeries_NumVal { get; set; }
        public DbSet<VWSPP_TimeSeries_StrVal> VWSPP_TimeSeries_StrVal { get; set; }
        public DbSet<SFP_Param_Pots> SFP_Param_Pots { get; set; }
        public DbSet<SmelPlan_NonNumeric> SmelPlan_NonNumeric { get; set; }
        public DbSet<SmelPlan_Numeric> SmelPlan_Numeric { get; set; }
        public DbSet<VWSPP_AdditionalKPI> VWSPP_AdditionalKPI { get; set; }
        public DbSet<VWSPP_AdditionalKPI_Targets> VWSPP_AdditionalKPI_Targets { get; set; }
        public DbSet<FSFE_Target_Values> FSFE_Target_Values { get; set; }
        public DbSet<FSFE_Target_ValueType> FSFE_Target_ValueType { get; set; }
        public DbSet<VWFSFE_Targets_Data> VWFSFE_Targets_Data { get; set; }
        public DbSet<FSFE_Comments_Data> FSFE_Comments_Data { get; set; }
        public DbSet<VWFSFE_Comments_Data> VWFSFE_Comments_Data { get; set; }
        public DbSet<SFP_Comments_Data> SFP_Comments_Data { get; set; }
        public DbSet<VWSFP_Comments_Data> VWSFP_Comments_Data { get; set; }
        public DbSet<AF_Manpower> AF_Manpower { get; set; }
        public DbSet<AF_Prod> AF_Prod { get; set; }
        public DbSet<AF_RoleType> AF_RoleType { get; set; }
        public DbSet<AF_Shift_Assign> AF_Shift_Assign { get; set; }
        public DbSet<VWAF_Manpower> VWAF_Manpower { get; set; }
        public DbSet<VWAF_Positions> VWAF_Positions { get; set; }
        public DbSet<VWAF_RoleTypes> VWAF_RoleTypes { get; set; }
        public DbSet<FSFE_Buildup_Daily_Param_Val> FSFE_Buildup_Daily_Param_Val { get; set; }
        public DbSet<FSFE_Buildup_Shift_Param_Val> FSFE_Buildup_Shift_Param_Val { get; set; }
        public DbSet<VWFSFE_Buildup_Daily> VWFSFE_Buildup_Daily { get; set; }
        public DbSet<VWFSFE_Buildup_Shift> VWFSFE_Buildup_Shift { get; set; }
        public DbSet<SFP_Pots_Data> SFP_Pots_Data { get; set; }
        public DbSet<VWSFP_Pots_Data> VWSFP_Pots_Data { get; set; }
        public DbSet<SFP_Shift_DPMComment_Values> SFP_Shift_DPMComment_Values { get; set; }
        public DbSet<VWSFP_DPMComments> VWSFP_DPMComments { get; set; }
        public DbSet<AF_ReworkedAnodes> AF_ReworkedAnodes { get; set; }
        public DbSet<AF_Activity> AF_Activity { get; set; }
        public DbSet<AF_Activity_Timekeeping> AF_Activity_Timekeeping { get; set; }
        public DbSet<AF_ActivityCode> AF_ActivityCode { get; set; }
        public DbSet<AF_ActivityCodeType> AF_ActivityCodeType { get; set; }
        public DbSet<AF_AnodeCharged> AF_AnodeCharged { get; set; }
        public DbSet<AF_Logs_NumVal> AF_Logs_NumVal { get; set; }
        public DbSet<AF_MouldMaintenance> AF_MouldMaintenance { get; set; }
        public DbSet<AF_MouldReplacement> AF_MouldReplacement { get; set; }
        public DbSet<AF_Param_TimeLog> AF_Param_TimeLog { get; set; }
        public DbSet<AF_TimeLog> AF_TimeLog { get; set; }
        public DbSet<VWAF_Logs_NumVal> VWAF_Logs_NumVal { get; set; }
        public DbSet<VWAF_TimeLogs> VWAF_TimeLogs { get; set; }
        public DbSet<VWAF_TimeLogs_AF> VWAF_TimeLogs_AF { get; set; }
        public DbSet<VWAF_AnodeCharged> VWAF_AnodeCharged { get; set; }
        public DbSet<VWAF_ReworkedAnodes> VWAF_ReworkedAnodes { get; set; }
    
        public virtual int PI_InstrumentData(string start_date, string end_date)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PI_InstrumentData", start_dateParameter, end_dateParameter);
        }
    
        public virtual int Employee_Shift_Change(Nullable<System.DateTime> shiftdate, Nullable<int> shiftschedid, Nullable<int> emp_roleid, Nullable<int> empid)
        {
            var shiftdateParameter = shiftdate.HasValue ?
                new ObjectParameter("shiftdate", shiftdate) :
                new ObjectParameter("shiftdate", typeof(System.DateTime));
    
            var shiftschedidParameter = shiftschedid.HasValue ?
                new ObjectParameter("shiftschedid", shiftschedid) :
                new ObjectParameter("shiftschedid", typeof(int));
    
            var emp_roleidParameter = emp_roleid.HasValue ?
                new ObjectParameter("emp_roleid", emp_roleid) :
                new ObjectParameter("emp_roleid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employee_Shift_Change", shiftdateParameter, shiftschedidParameter, emp_roleidParameter, empidParameter);
        }
    
        public virtual ObjectResult<CYCLE_STAGE_CHANGE_Result> CYCLE_STAGE_CHANGE(Nullable<int> cycleid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_STAGE_CHANGE_Result>("CYCLE_STAGE_CHANGE", cycleidParameter);
        }
    
        public virtual ObjectResult<CYCLE_PERSTAGE_DATERANGE_Result> CYCLE_PERSTAGE_DATERANGE(Nullable<int> cycleid, Nullable<int> stageid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_PERSTAGE_DATERANGE_Result>("CYCLE_PERSTAGE_DATERANGE", cycleidParameter, stageidParameter);
        }
    
        public virtual ObjectResult<EMPLOYEE_3SHIFT_Result> EMPLOYEE_3SHIFT(Nullable<System.DateTime> shiftdate)
        {
            var shiftdateParameter = shiftdate.HasValue ?
                new ObjectParameter("shiftdate", shiftdate) :
                new ObjectParameter("shiftdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EMPLOYEE_3SHIFT_Result>("EMPLOYEE_3SHIFT", shiftdateParameter);
        }
    
        public virtual ObjectResult<EMPLOYEE_7TO7_SHIFT_Result> EMPLOYEE_7TO7_SHIFT(Nullable<System.DateTime> shiftdate)
        {
            var shiftdateParameter = shiftdate.HasValue ?
                new ObjectParameter("shiftdate", shiftdate) :
                new ObjectParameter("shiftdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EMPLOYEE_7TO7_SHIFT_Result>("EMPLOYEE_7TO7_SHIFT", shiftdateParameter);
        }
    
        public virtual int Employee_TypeShift_Change(Nullable<int> emp_roleid, Nullable<System.DateTime> shiftdate, Nullable<int> typeshiftid)
        {
            var emp_roleidParameter = emp_roleid.HasValue ?
                new ObjectParameter("emp_roleid", emp_roleid) :
                new ObjectParameter("emp_roleid", typeof(int));
    
            var shiftdateParameter = shiftdate.HasValue ?
                new ObjectParameter("shiftdate", shiftdate) :
                new ObjectParameter("shiftdate", typeof(System.DateTime));
    
            var typeshiftidParameter = typeshiftid.HasValue ?
                new ObjectParameter("typeshiftid", typeshiftid) :
                new ObjectParameter("typeshiftid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Employee_TypeShift_Change", emp_roleidParameter, shiftdateParameter, typeshiftidParameter);
        }
    
        public virtual ObjectResult<CYCLE_ACTIVITY_PERSTAGE_Result> CYCLE_ACTIVITY_PERSTAGE(Nullable<int> cycleid, Nullable<int> stageid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_ACTIVITY_PERSTAGE_Result>("CYCLE_ACTIVITY_PERSTAGE", cycleidParameter, stageidParameter);
        }
    
        public virtual int PI_InstrumentData_PERCF(string start_date, string end_date, string blow_air_tag)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var blow_air_tagParameter = blow_air_tag != null ?
                new ObjectParameter("blow_air_tag", blow_air_tag) :
                new ObjectParameter("blow_air_tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PI_InstrumentData_PERCF", start_dateParameter, end_dateParameter, blow_air_tagParameter);
        }
    
        public virtual ObjectResult<PI_InstrumentData_PERCF_DEFINED_Result> PI_InstrumentData_PERCF_DEFINED(string start_date, string end_date, string blow_air_tag)
        {
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var blow_air_tagParameter = blow_air_tag != null ?
                new ObjectParameter("blow_air_tag", blow_air_tag) :
                new ObjectParameter("blow_air_tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PI_InstrumentData_PERCF_DEFINED_Result>("PI_InstrumentData_PERCF_DEFINED", start_dateParameter, end_dateParameter, blow_air_tagParameter);
        }
    
        public virtual int INSERT_ACTIVITY(Nullable<int> cycleid, Nullable<int> actcodeid, Nullable<double> cycledur, Nullable<double> fsfe_qty, Nullable<double> cf_qty, Nullable<double> af_qty, string act_comment, Nullable<int> stageid, Nullable<int> activitymode)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var actcodeidParameter = actcodeid.HasValue ?
                new ObjectParameter("actcodeid", actcodeid) :
                new ObjectParameter("actcodeid", typeof(int));
    
            var cycledurParameter = cycledur.HasValue ?
                new ObjectParameter("cycledur", cycledur) :
                new ObjectParameter("cycledur", typeof(double));
    
            var fsfe_qtyParameter = fsfe_qty.HasValue ?
                new ObjectParameter("fsfe_qty", fsfe_qty) :
                new ObjectParameter("fsfe_qty", typeof(double));
    
            var cf_qtyParameter = cf_qty.HasValue ?
                new ObjectParameter("cf_qty", cf_qty) :
                new ObjectParameter("cf_qty", typeof(double));
    
            var af_qtyParameter = af_qty.HasValue ?
                new ObjectParameter("af_qty", af_qty) :
                new ObjectParameter("af_qty", typeof(double));
    
            var act_commentParameter = act_comment != null ?
                new ObjectParameter("act_comment", act_comment) :
                new ObjectParameter("act_comment", typeof(string));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            var activitymodeParameter = activitymode.HasValue ?
                new ObjectParameter("activitymode", activitymode) :
                new ObjectParameter("activitymode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ACTIVITY", cycleidParameter, actcodeidParameter, cycledurParameter, fsfe_qtyParameter, cf_qtyParameter, af_qtyParameter, act_commentParameter, stageidParameter, activitymodeParameter);
        }
    
        public virtual ObjectResult<CYCLE_PERACTIVITY_DATERANGE_Result> CYCLE_PERACTIVITY_DATERANGE(Nullable<int> cycleid, Nullable<int> activityid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var activityidParameter = activityid.HasValue ?
                new ObjectParameter("activityid", activityid) :
                new ObjectParameter("activityid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_PERACTIVITY_DATERANGE_Result>("CYCLE_PERACTIVITY_DATERANGE", cycleidParameter, activityidParameter);
        }
    
        public virtual int INSERT_MIDDLE_ACTIVITY(Nullable<int> prev_actid, Nullable<int> cycleid, Nullable<int> actcodeid, Nullable<double> cycledur, Nullable<double> fsfe_qty, Nullable<double> cf_qty, Nullable<double> af_qty, string act_comment, Nullable<int> stageid, Nullable<int> activitymode)
        {
            var prev_actidParameter = prev_actid.HasValue ?
                new ObjectParameter("prev_actid", prev_actid) :
                new ObjectParameter("prev_actid", typeof(int));
    
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var actcodeidParameter = actcodeid.HasValue ?
                new ObjectParameter("actcodeid", actcodeid) :
                new ObjectParameter("actcodeid", typeof(int));
    
            var cycledurParameter = cycledur.HasValue ?
                new ObjectParameter("cycledur", cycledur) :
                new ObjectParameter("cycledur", typeof(double));
    
            var fsfe_qtyParameter = fsfe_qty.HasValue ?
                new ObjectParameter("fsfe_qty", fsfe_qty) :
                new ObjectParameter("fsfe_qty", typeof(double));
    
            var cf_qtyParameter = cf_qty.HasValue ?
                new ObjectParameter("cf_qty", cf_qty) :
                new ObjectParameter("cf_qty", typeof(double));
    
            var af_qtyParameter = af_qty.HasValue ?
                new ObjectParameter("af_qty", af_qty) :
                new ObjectParameter("af_qty", typeof(double));
    
            var act_commentParameter = act_comment != null ?
                new ObjectParameter("act_comment", act_comment) :
                new ObjectParameter("act_comment", typeof(string));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            var activitymodeParameter = activitymode.HasValue ?
                new ObjectParameter("activitymode", activitymode) :
                new ObjectParameter("activitymode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_MIDDLE_ACTIVITY", prev_actidParameter, cycleidParameter, actcodeidParameter, cycledurParameter, fsfe_qtyParameter, cf_qtyParameter, af_qtyParameter, act_commentParameter, stageidParameter, activitymodeParameter);
        }
    
        public virtual ObjectResult<CYCLE_SELECTOR_Result> CYCLE_SELECTOR(string cyclenum, Nullable<System.DateTime> udstartdate, Nullable<System.DateTime> udenddate)
        {
            var cyclenumParameter = cyclenum != null ?
                new ObjectParameter("cyclenum", cyclenum) :
                new ObjectParameter("cyclenum", typeof(string));
    
            var udstartdateParameter = udstartdate.HasValue ?
                new ObjectParameter("udstartdate", udstartdate) :
                new ObjectParameter("udstartdate", typeof(System.DateTime));
    
            var udenddateParameter = udenddate.HasValue ?
                new ObjectParameter("udenddate", udenddate) :
                new ObjectParameter("udenddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_SELECTOR_Result>("CYCLE_SELECTOR", cyclenumParameter, udstartdateParameter, udenddateParameter);
        }
    
        public virtual int CYCLE_PERSTAGE_DURATION(Nullable<int> cycleid, Nullable<int> stageid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CYCLE_PERSTAGE_DURATION", cycleidParameter, stageidParameter);
        }
    
        public virtual int INSERT_FESILICA(Nullable<double> fesilica, string reasonchange, Nullable<int> changeid, Nullable<int> changetypeid)
        {
            var fesilicaParameter = fesilica.HasValue ?
                new ObjectParameter("fesilica", fesilica) :
                new ObjectParameter("fesilica", typeof(double));
    
            var reasonchangeParameter = reasonchange != null ?
                new ObjectParameter("reasonchange", reasonchange) :
                new ObjectParameter("reasonchange", typeof(string));
    
            var changeidParameter = changeid.HasValue ?
                new ObjectParameter("changeid", changeid) :
                new ObjectParameter("changeid", typeof(int));
    
            var changetypeidParameter = changetypeid.HasValue ?
                new ObjectParameter("changetypeid", changetypeid) :
                new ObjectParameter("changetypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_FESILICA", fesilicaParameter, reasonchangeParameter, changeidParameter, changetypeidParameter);
        }
    
        public virtual int SETDEFAULT_FESILICA(Nullable<int> fesilicaid, string reasonchange, Nullable<int> changeid, Nullable<int> changetypeid)
        {
            var fesilicaidParameter = fesilicaid.HasValue ?
                new ObjectParameter("fesilicaid", fesilicaid) :
                new ObjectParameter("fesilicaid", typeof(int));
    
            var reasonchangeParameter = reasonchange != null ?
                new ObjectParameter("reasonchange", reasonchange) :
                new ObjectParameter("reasonchange", typeof(string));
    
            var changeidParameter = changeid.HasValue ?
                new ObjectParameter("changeid", changeid) :
                new ObjectParameter("changeid", typeof(int));
    
            var changetypeidParameter = changetypeid.HasValue ?
                new ObjectParameter("changetypeid", changetypeid) :
                new ObjectParameter("changetypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SETDEFAULT_FESILICA", fesilicaidParameter, reasonchangeParameter, changeidParameter, changetypeidParameter);
        }
    
        public virtual int UPDATE_FESILICA(Nullable<int> fesilicaid, Nullable<double> fesilica, string reasonchange, Nullable<int> changeid, Nullable<int> changetypeid)
        {
            var fesilicaidParameter = fesilicaid.HasValue ?
                new ObjectParameter("fesilicaid", fesilicaid) :
                new ObjectParameter("fesilicaid", typeof(int));
    
            var fesilicaParameter = fesilica.HasValue ?
                new ObjectParameter("fesilica", fesilica) :
                new ObjectParameter("fesilica", typeof(double));
    
            var reasonchangeParameter = reasonchange != null ?
                new ObjectParameter("reasonchange", reasonchange) :
                new ObjectParameter("reasonchange", typeof(string));
    
            var changeidParameter = changeid.HasValue ?
                new ObjectParameter("changeid", changeid) :
                new ObjectParameter("changeid", typeof(int));
    
            var changetypeidParameter = changetypeid.HasValue ?
                new ObjectParameter("changetypeid", changetypeid) :
                new ObjectParameter("changetypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_FESILICA", fesilicaidParameter, fesilicaParameter, reasonchangeParameter, changeidParameter, changetypeidParameter);
        }
    
        public virtual int MatteGrade_Change(Nullable<int> actid, Nullable<double> mgrade)
        {
            var actidParameter = actid.HasValue ?
                new ObjectParameter("actid", actid) :
                new ObjectParameter("actid", typeof(int));
    
            var mgradeParameter = mgrade.HasValue ?
                new ObjectParameter("mgrade", mgrade) :
                new ObjectParameter("mgrade", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MatteGrade_Change", actidParameter, mgradeParameter);
        }
    
        public virtual int CYCLE_EDIT_CYCLESTAT(Nullable<int> cycleid, Nullable<int> cyclestatusid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var cyclestatusidParameter = cyclestatusid.HasValue ?
                new ObjectParameter("cyclestatusid", cyclestatusid) :
                new ObjectParameter("cyclestatusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CYCLE_EDIT_CYCLESTAT", cycleidParameter, cyclestatusidParameter);
        }
    
        public virtual ObjectResult<CYCLE_CHANGESTARTDATE_DATA_Result> CYCLE_CHANGESTARTDATE_DATA(Nullable<int> cycleid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_CHANGESTARTDATE_DATA_Result>("CYCLE_CHANGESTARTDATE_DATA", cycleidParameter);
        }
    
        public virtual int CHANGE_ASSIGNEMPLOYEE_STAGE(Nullable<int> cycle_id, Nullable<int> stage_id, Nullable<int> employee_id, Nullable<int> employeerolestage_id)
        {
            var cycle_idParameter = cycle_id.HasValue ?
                new ObjectParameter("cycle_id", cycle_id) :
                new ObjectParameter("cycle_id", typeof(int));
    
            var stage_idParameter = stage_id.HasValue ?
                new ObjectParameter("stage_id", stage_id) :
                new ObjectParameter("stage_id", typeof(int));
    
            var employee_idParameter = employee_id.HasValue ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(int));
    
            var employeerolestage_idParameter = employeerolestage_id.HasValue ?
                new ObjectParameter("employeerolestage_id", employeerolestage_id) :
                new ObjectParameter("employeerolestage_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHANGE_ASSIGNEMPLOYEE_STAGE", cycle_idParameter, stage_idParameter, employee_idParameter, employeerolestage_idParameter);
        }
    
        public virtual ObjectResult<CYCLE_STAGE_ASSIGN_DATA_Result> CYCLE_STAGE_ASSIGN_DATA(Nullable<int> cycleid, Nullable<int> stageid, string employeetype)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            var employeetypeParameter = employeetype != null ?
                new ObjectParameter("employeetype", employeetype) :
                new ObjectParameter("employeetype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_STAGE_ASSIGN_DATA_Result>("CYCLE_STAGE_ASSIGN_DATA", cycleidParameter, stageidParameter, employeetypeParameter);
        }
    
        public virtual ObjectResult<CYCLE_ALL_ACTIVITY_Result> CYCLE_ALL_ACTIVITY(Nullable<int> cycleid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_ALL_ACTIVITY_Result>("CYCLE_ALL_ACTIVITY", cycleidParameter);
        }
    
        public virtual int Tuyere_Change(Nullable<int> cycleid, Nullable<int> tuy_num, Nullable<int> tuy_stateid, Nullable<int> tuy_measurement)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var tuy_numParameter = tuy_num.HasValue ?
                new ObjectParameter("tuy_num", tuy_num) :
                new ObjectParameter("tuy_num", typeof(int));
    
            var tuy_stateidParameter = tuy_stateid.HasValue ?
                new ObjectParameter("tuy_stateid", tuy_stateid) :
                new ObjectParameter("tuy_stateid", typeof(int));
    
            var tuy_measurementParameter = tuy_measurement.HasValue ?
                new ObjectParameter("tuy_measurement", tuy_measurement) :
                new ObjectParameter("tuy_measurement", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Tuyere_Change", cycleidParameter, tuy_numParameter, tuy_stateidParameter, tuy_measurementParameter);
        }
    
        public virtual ObjectResult<CYCLE_SILICAREQUIRED_Result> CYCLE_SILICAREQUIRED(Nullable<int> cycleid, Nullable<int> stageid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_SILICAREQUIRED_Result>("CYCLE_SILICAREQUIRED", cycleidParameter, stageidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FSFE_PRODID_CHANGE(Nullable<System.DateTime> fsfe_date, Nullable<int> fsfe_shift_id)
        {
            var fsfe_dateParameter = fsfe_date.HasValue ?
                new ObjectParameter("fsfe_date", fsfe_date) :
                new ObjectParameter("fsfe_date", typeof(System.DateTime));
    
            var fsfe_shift_idParameter = fsfe_shift_id.HasValue ?
                new ObjectParameter("fsfe_shift_id", fsfe_shift_id) :
                new ObjectParameter("fsfe_shift_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FSFE_PRODID_CHANGE", fsfe_dateParameter, fsfe_shift_idParameter);
        }
    
        public virtual int FSFE_ManPower_Change(Nullable<int> fsfeprodid, Nullable<int> crew_empid, Nullable<int> roletype_id, Nullable<int> crew_AddlEmpidA, Nullable<int> crew_AddlEmpidB)
        {
            var fsfeprodidParameter = fsfeprodid.HasValue ?
                new ObjectParameter("fsfeprodid", fsfeprodid) :
                new ObjectParameter("fsfeprodid", typeof(int));
    
            var crew_empidParameter = crew_empid.HasValue ?
                new ObjectParameter("crew_empid", crew_empid) :
                new ObjectParameter("crew_empid", typeof(int));
    
            var roletype_idParameter = roletype_id.HasValue ?
                new ObjectParameter("roletype_id", roletype_id) :
                new ObjectParameter("roletype_id", typeof(int));
    
            var crew_AddlEmpidAParameter = crew_AddlEmpidA.HasValue ?
                new ObjectParameter("crew_AddlEmpidA", crew_AddlEmpidA) :
                new ObjectParameter("crew_AddlEmpidA", typeof(int));
    
            var crew_AddlEmpidBParameter = crew_AddlEmpidB.HasValue ?
                new ObjectParameter("crew_AddlEmpidB", crew_AddlEmpidB) :
                new ObjectParameter("crew_AddlEmpidB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_ManPower_Change", fsfeprodidParameter, crew_empidParameter, roletype_idParameter, crew_AddlEmpidAParameter, crew_AddlEmpidBParameter);
        }
    
        public virtual int FSFE_KPI_CHANGE(Nullable<int> fsfeprodid, Nullable<int> fsfeparamid, string kpicomment)
        {
            var fsfeprodidParameter = fsfeprodid.HasValue ?
                new ObjectParameter("fsfeprodid", fsfeprodid) :
                new ObjectParameter("fsfeprodid", typeof(int));
    
            var fsfeparamidParameter = fsfeparamid.HasValue ?
                new ObjectParameter("fsfeparamid", fsfeparamid) :
                new ObjectParameter("fsfeparamid", typeof(int));
    
            var kpicommentParameter = kpicomment != null ?
                new ObjectParameter("kpicomment", kpicomment) :
                new ObjectParameter("kpicomment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_KPI_CHANGE", fsfeprodidParameter, fsfeparamidParameter, kpicommentParameter);
        }
    
        public virtual int FSFE_CHECKLIST_ASSIGN(Nullable<int> prodid, Nullable<int> paramgroupid, string @params)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(int));
    
            var paramgroupidParameter = paramgroupid.HasValue ?
                new ObjectParameter("paramgroupid", paramgroupid) :
                new ObjectParameter("paramgroupid", typeof(int));
    
            var paramsParameter = @params != null ?
                new ObjectParameter("params", @params) :
                new ObjectParameter("params", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_CHECKLIST_ASSIGN", prodidParameter, paramgroupidParameter, paramsParameter);
        }
    
        public virtual int FSFE_HLIGHT_ASSIGN(Nullable<int> fsfeprodid, string kpicomment1, string kpicomment2)
        {
            var fsfeprodidParameter = fsfeprodid.HasValue ?
                new ObjectParameter("fsfeprodid", fsfeprodid) :
                new ObjectParameter("fsfeprodid", typeof(int));
    
            var kpicomment1Parameter = kpicomment1 != null ?
                new ObjectParameter("kpicomment1", kpicomment1) :
                new ObjectParameter("kpicomment1", typeof(string));
    
            var kpicomment2Parameter = kpicomment2 != null ?
                new ObjectParameter("kpicomment2", kpicomment2) :
                new ObjectParameter("kpicomment2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_HLIGHT_ASSIGN", fsfeprodidParameter, kpicomment1Parameter, kpicomment2Parameter);
        }
    
        public virtual ObjectResult<string> FSFE_FPATTERN_FII_IMAGES(Nullable<int> fsfe_prodid, Nullable<int> fsfe_paramid, string fsfe_remarks, string fsfe_mode, string fsfe_file_ext)
        {
            var fsfe_prodidParameter = fsfe_prodid.HasValue ?
                new ObjectParameter("fsfe_prodid", fsfe_prodid) :
                new ObjectParameter("fsfe_prodid", typeof(int));
    
            var fsfe_paramidParameter = fsfe_paramid.HasValue ?
                new ObjectParameter("fsfe_paramid", fsfe_paramid) :
                new ObjectParameter("fsfe_paramid", typeof(int));
    
            var fsfe_remarksParameter = fsfe_remarks != null ?
                new ObjectParameter("fsfe_remarks", fsfe_remarks) :
                new ObjectParameter("fsfe_remarks", typeof(string));
    
            var fsfe_modeParameter = fsfe_mode != null ?
                new ObjectParameter("fsfe_mode", fsfe_mode) :
                new ObjectParameter("fsfe_mode", typeof(string));
    
            var fsfe_file_extParameter = fsfe_file_ext != null ?
                new ObjectParameter("fsfe_file_ext", fsfe_file_ext) :
                new ObjectParameter("fsfe_file_ext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FSFE_FPATTERN_FII_IMAGES", fsfe_prodidParameter, fsfe_paramidParameter, fsfe_remarksParameter, fsfe_modeParameter, fsfe_file_extParameter);
        }
    
        public virtual ObjectResult<string> FSFE_FPATTERN_EDIT_FII_IMAGES(Nullable<int> fsfe_fpatternfii_id, string fsfe_remarks, string fsfe_mode, string fsfe_file_ext)
        {
            var fsfe_fpatternfii_idParameter = fsfe_fpatternfii_id.HasValue ?
                new ObjectParameter("fsfe_fpatternfii_id", fsfe_fpatternfii_id) :
                new ObjectParameter("fsfe_fpatternfii_id", typeof(int));
    
            var fsfe_remarksParameter = fsfe_remarks != null ?
                new ObjectParameter("fsfe_remarks", fsfe_remarks) :
                new ObjectParameter("fsfe_remarks", typeof(string));
    
            var fsfe_modeParameter = fsfe_mode != null ?
                new ObjectParameter("fsfe_mode", fsfe_mode) :
                new ObjectParameter("fsfe_mode", typeof(string));
    
            var fsfe_file_extParameter = fsfe_file_ext != null ?
                new ObjectParameter("fsfe_file_ext", fsfe_file_ext) :
                new ObjectParameter("fsfe_file_ext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FSFE_FPATTERN_EDIT_FII_IMAGES", fsfe_fpatternfii_idParameter, fsfe_remarksParameter, fsfe_modeParameter, fsfe_file_extParameter);
        }
    
        public virtual ObjectResult<FSFE_SELECT_FII_Result> FSFE_SELECT_FII(Nullable<int> fsfe_prodid)
        {
            var fsfe_prodidParameter = fsfe_prodid.HasValue ?
                new ObjectParameter("fsfe_prodid", fsfe_prodid) :
                new ObjectParameter("fsfe_prodid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FSFE_SELECT_FII_Result>("FSFE_SELECT_FII", fsfe_prodidParameter);
        }
    
        public virtual ObjectResult<string> FSFE_FII_IMAGES(Nullable<int> fsfe_prodid, Nullable<int> fsfe_paramid, string fsfe_remarks, string fsfe_mode, string fsfe_file_ext)
        {
            var fsfe_prodidParameter = fsfe_prodid.HasValue ?
                new ObjectParameter("fsfe_prodid", fsfe_prodid) :
                new ObjectParameter("fsfe_prodid", typeof(int));
    
            var fsfe_paramidParameter = fsfe_paramid.HasValue ?
                new ObjectParameter("fsfe_paramid", fsfe_paramid) :
                new ObjectParameter("fsfe_paramid", typeof(int));
    
            var fsfe_remarksParameter = fsfe_remarks != null ?
                new ObjectParameter("fsfe_remarks", fsfe_remarks) :
                new ObjectParameter("fsfe_remarks", typeof(string));
    
            var fsfe_modeParameter = fsfe_mode != null ?
                new ObjectParameter("fsfe_mode", fsfe_mode) :
                new ObjectParameter("fsfe_mode", typeof(string));
    
            var fsfe_file_extParameter = fsfe_file_ext != null ?
                new ObjectParameter("fsfe_file_ext", fsfe_file_ext) :
                new ObjectParameter("fsfe_file_ext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FSFE_FII_IMAGES", fsfe_prodidParameter, fsfe_paramidParameter, fsfe_remarksParameter, fsfe_modeParameter, fsfe_file_extParameter);
        }
    
        public virtual int FSFE_KPI_ASSIGN(Nullable<int> fsfeprodid, string kpicomment2, string kpicomment3, string kpicomment4, string kpicomment5)
        {
            var fsfeprodidParameter = fsfeprodid.HasValue ?
                new ObjectParameter("fsfeprodid", fsfeprodid) :
                new ObjectParameter("fsfeprodid", typeof(int));
    
            var kpicomment2Parameter = kpicomment2 != null ?
                new ObjectParameter("kpicomment2", kpicomment2) :
                new ObjectParameter("kpicomment2", typeof(string));
    
            var kpicomment3Parameter = kpicomment3 != null ?
                new ObjectParameter("kpicomment3", kpicomment3) :
                new ObjectParameter("kpicomment3", typeof(string));
    
            var kpicomment4Parameter = kpicomment4 != null ?
                new ObjectParameter("kpicomment4", kpicomment4) :
                new ObjectParameter("kpicomment4", typeof(string));
    
            var kpicomment5Parameter = kpicomment5 != null ?
                new ObjectParameter("kpicomment5", kpicomment5) :
                new ObjectParameter("kpicomment5", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_KPI_ASSIGN", fsfeprodidParameter, kpicomment2Parameter, kpicomment3Parameter, kpicomment4Parameter, kpicomment5Parameter);
        }
    
        public virtual ObjectResult<CYCLE_CVFORM_DUR_DATA_Result> CYCLE_CVFORM_DUR_DATA(Nullable<int> cycleid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_CVFORM_DUR_DATA_Result>("CYCLE_CVFORM_DUR_DATA", cycleidParameter);
        }
    
        public virtual ObjectResult<CYCLE_CVFORM_SILICA_SLAG_REQUIRED_Result> CYCLE_CVFORM_SILICA_SLAG_REQUIRED(Nullable<int> cycleid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_CVFORM_SILICA_SLAG_REQUIRED_Result>("CYCLE_CVFORM_SILICA_SLAG_REQUIRED", cycleidParameter);
        }
    
        public virtual ObjectResult<CYCLE_CVFORM_SILICAREQUIRED_2ND3RD_Result> CYCLE_CVFORM_SILICAREQUIRED_2ND3RD(Nullable<int> cycleid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CYCLE_CVFORM_SILICAREQUIRED_2ND3RD_Result>("CYCLE_CVFORM_SILICAREQUIRED_2ND3RD", cycleidParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_AVG_TimeWeighted")]
        public virtual IQueryable<FN_AVG_TimeWeighted_Result> FN_AVG_TimeWeighted(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, string pitag, Nullable<double> efduration)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var pitagParameter = pitag != null ?
                new ObjectParameter("pitag", pitag) :
                new ObjectParameter("pitag", typeof(string));
    
            var efdurationParameter = efduration.HasValue ?
                new ObjectParameter("efduration", efduration) :
                new ObjectParameter("efduration", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_AVG_TimeWeighted_Result>("[PASAROperationEntities].[FN_AVG_TimeWeighted](@start_date, @end_date, @pitag, @efduration)", start_dateParameter, end_dateParameter, pitagParameter, efdurationParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_FSFE_Charge")]
        public virtual IQueryable<FN_FSFE_Charge_Result> FN_FSFE_Charge(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<int> fsfe_prod_id)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var fsfe_prod_idParameter = fsfe_prod_id.HasValue ?
                new ObjectParameter("fsfe_prod_id", fsfe_prod_id) :
                new ObjectParameter("fsfe_prod_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_FSFE_Charge_Result>("[PASAROperationEntities].[FN_FSFE_Charge](@start_date, @end_date, @fsfe_prod_id)", start_dateParameter, end_dateParameter, fsfe_prod_idParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_FSFE_KPI")]
        public virtual IQueryable<FN_FSFE_KPI_Result> FN_FSFE_KPI(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<int> fsfe_prod_id)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var fsfe_prod_idParameter = fsfe_prod_id.HasValue ?
                new ObjectParameter("fsfe_prod_id", fsfe_prod_id) :
                new ObjectParameter("fsfe_prod_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_FSFE_KPI_Result>("[PASAROperationEntities].[FN_FSFE_KPI](@start_date, @end_date, @fsfe_prod_id)", start_dateParameter, end_dateParameter, fsfe_prod_idParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_FSFE_KPI_PI")]
        public virtual IQueryable<FN_FSFE_KPI_PI_Result> FN_FSFE_KPI_PI(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, Nullable<int> fsfe_prod_id)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var fsfe_prod_idParameter = fsfe_prod_id.HasValue ?
                new ObjectParameter("fsfe_prod_id", fsfe_prod_id) :
                new ObjectParameter("fsfe_prod_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_FSFE_KPI_PI_Result>("[PASAROperationEntities].[FN_FSFE_KPI_PI](@start_date, @end_date, @fsfe_prod_id)", start_dateParameter, end_dateParameter, fsfe_prod_idParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_FSFE_PERTAG")]
        public virtual IQueryable<FN_FSFE_PERTAG_Result> FN_FSFE_PERTAG(Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date, string tagname, Nullable<int> fsfe_prod_id)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            var tagnameParameter = tagname != null ?
                new ObjectParameter("tagname", tagname) :
                new ObjectParameter("tagname", typeof(string));
    
            var fsfe_prod_idParameter = fsfe_prod_id.HasValue ?
                new ObjectParameter("fsfe_prod_id", fsfe_prod_id) :
                new ObjectParameter("fsfe_prod_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_FSFE_PERTAG_Result>("[PASAROperationEntities].[FN_FSFE_PERTAG](@start_date, @end_date, @tagname, @fsfe_prod_id)", start_dateParameter, end_dateParameter, tagnameParameter, fsfe_prod_idParameter);
        }
    
        public virtual ObjectResult<FSF_FeedRate_Result> FSF_FeedRate(Nullable<System.DateTime> start_date, Nullable<int> days, string timestep_val, string mcname, string pitag)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(int));
    
            var timestep_valParameter = timestep_val != null ?
                new ObjectParameter("timestep_val", timestep_val) :
                new ObjectParameter("timestep_val", typeof(string));
    
            var mcnameParameter = mcname != null ?
                new ObjectParameter("mcname", mcname) :
                new ObjectParameter("mcname", typeof(string));
    
            var pitagParameter = pitag != null ?
                new ObjectParameter("pitag", pitag) :
                new ObjectParameter("pitag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FSF_FeedRate_Result>("FSF_FeedRate", start_dateParameter, daysParameter, timestep_valParameter, mcnameParameter, pitagParameter);
        }
    
        public virtual ObjectResult<FSFE_KPI_DATA_Result> FSFE_KPI_DATA(Nullable<int> fsfe_prodid)
        {
            var fsfe_prodidParameter = fsfe_prodid.HasValue ?
                new ObjectParameter("fsfe_prodid", fsfe_prodid) :
                new ObjectParameter("fsfe_prodid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FSFE_KPI_DATA_Result>("FSFE_KPI_DATA", fsfe_prodidParameter);
        }
    
        public virtual ObjectResult<RT_FeedRate_Result> RT_FeedRate(Nullable<System.DateTime> start_date, Nullable<int> days, string timestep_val, string mcname, string pitag)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(int));
    
            var timestep_valParameter = timestep_val != null ?
                new ObjectParameter("timestep_val", timestep_val) :
                new ObjectParameter("timestep_val", typeof(string));
    
            var mcnameParameter = mcname != null ?
                new ObjectParameter("mcname", mcname) :
                new ObjectParameter("mcname", typeof(string));
    
            var pitagParameter = pitag != null ?
                new ObjectParameter("pitag", pitag) :
                new ObjectParameter("pitag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RT_FeedRate_Result>("RT_FeedRate", start_dateParameter, daysParameter, timestep_valParameter, mcnameParameter, pitagParameter);
        }
    
        public virtual ObjectResult<RTDUET_Discipline_Total_Result> RTDUET_Discipline_Total(Nullable<System.DateTime> startUD, Nullable<int> days, string mcname, string pitag)
        {
            var startUDParameter = startUD.HasValue ?
                new ObjectParameter("StartUD", startUD) :
                new ObjectParameter("StartUD", typeof(System.DateTime));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(int));
    
            var mcnameParameter = mcname != null ?
                new ObjectParameter("mcname", mcname) :
                new ObjectParameter("mcname", typeof(string));
    
            var pitagParameter = pitag != null ?
                new ObjectParameter("pitag", pitag) :
                new ObjectParameter("pitag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RTDUET_Discipline_Total_Result>("RTDUET_Discipline_Total", startUDParameter, daysParameter, mcnameParameter, pitagParameter);
        }
    
        public virtual ObjectResult<RTDUET_EVENTS_Result> RTDUET_EVENTS(Nullable<System.DateTime> startUD, Nullable<int> days, string mcname, string pitag)
        {
            var startUDParameter = startUD.HasValue ?
                new ObjectParameter("StartUD", startUD) :
                new ObjectParameter("StartUD", typeof(System.DateTime));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(int));
    
            var mcnameParameter = mcname != null ?
                new ObjectParameter("mcname", mcname) :
                new ObjectParameter("mcname", typeof(string));
    
            var pitagParameter = pitag != null ?
                new ObjectParameter("pitag", pitag) :
                new ObjectParameter("pitag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RTDUET_EVENTS_Result>("RTDUET_EVENTS", startUDParameter, daysParameter, mcnameParameter, pitagParameter);
        }
    
        public virtual ObjectResult<RTDUET_TUC_Total_Result> RTDUET_TUC_Total(Nullable<System.DateTime> startUD, Nullable<int> days, string mcname, string pitag)
        {
            var startUDParameter = startUD.HasValue ?
                new ObjectParameter("StartUD", startUD) :
                new ObjectParameter("StartUD", typeof(System.DateTime));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(int));
    
            var mcnameParameter = mcname != null ?
                new ObjectParameter("mcname", mcname) :
                new ObjectParameter("mcname", typeof(string));
    
            var pitagParameter = pitag != null ?
                new ObjectParameter("pitag", pitag) :
                new ObjectParameter("pitag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RTDUET_TUC_Total_Result>("RTDUET_TUC_Total", startUDParameter, daysParameter, mcnameParameter, pitagParameter);
        }
    
        public virtual int AF_PARAM_DTIME_SP(Nullable<int> aflotid, Nullable<int> afparamid, Nullable<System.DateTime> afstarttime, Nullable<System.DateTime> afendtime)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afstarttimeParameter = afstarttime.HasValue ?
                new ObjectParameter("afstarttime", afstarttime) :
                new ObjectParameter("afstarttime", typeof(System.DateTime));
    
            var afendtimeParameter = afendtime.HasValue ?
                new ObjectParameter("afendtime", afendtime) :
                new ObjectParameter("afendtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_DTIME_SP", aflotidParameter, afparamidParameter, afstarttimeParameter, afendtimeParameter);
        }
    
        public virtual int AF_PARAM_EMP_SP(Nullable<int> aflotid, Nullable<int> afparamid, Nullable<int> afstartempid, Nullable<int> afendempid)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afstartempidParameter = afstartempid.HasValue ?
                new ObjectParameter("afstartempid", afstartempid) :
                new ObjectParameter("afstartempid", typeof(int));
    
            var afendempidParameter = afendempid.HasValue ?
                new ObjectParameter("afendempid", afendempid) :
                new ObjectParameter("afendempid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_EMP_SP", aflotidParameter, afparamidParameter, afstartempidParameter, afendempidParameter);
        }
    
        public virtual int AF_PARAM_NUMERIC_SP(Nullable<int> aflotid, Nullable<int> afparamid, Nullable<double> afnumval)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afnumvalParameter = afnumval.HasValue ?
                new ObjectParameter("afnumval", afnumval) :
                new ObjectParameter("afnumval", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_NUMERIC_SP", aflotidParameter, afparamidParameter, afnumvalParameter);
        }
    
        public virtual int AF_PARAM_STR_SP(Nullable<int> aflotid, Nullable<int> afparamid, string afstrval)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afstrvalParameter = afstrval != null ?
                new ObjectParameter("afstrval", afstrval) :
                new ObjectParameter("afstrval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_STR_SP", aflotidParameter, afparamidParameter, afstrvalParameter);
        }
    
        public virtual ObjectResult<RTDUET_EVENTS_TOP10_Result> RTDUET_EVENTS_TOP10(Nullable<System.DateTime> startUD, Nullable<int> days, string mcname, string pitag)
        {
            var startUDParameter = startUD.HasValue ?
                new ObjectParameter("StartUD", startUD) :
                new ObjectParameter("StartUD", typeof(System.DateTime));
    
            var daysParameter = days.HasValue ?
                new ObjectParameter("days", days) :
                new ObjectParameter("days", typeof(int));
    
            var mcnameParameter = mcname != null ?
                new ObjectParameter("mcname", mcname) :
                new ObjectParameter("mcname", typeof(string));
    
            var pitagParameter = pitag != null ?
                new ObjectParameter("pitag", pitag) :
                new ObjectParameter("pitag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RTDUET_EVENTS_TOP10_Result>("RTDUET_EVENTS_TOP10", startUDParameter, daysParameter, mcnameParameter, pitagParameter);
        }
    
        public virtual int CF_SEND_TO_PI_BI(Nullable<int> cycleid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CF_SEND_TO_PI_BI", cycleidParameter);
        }
    
        public virtual int SP_PI_DELETE_DATERANGE_RT(Nullable<int> cvnum, Nullable<System.DateTime> strTime, Nullable<System.DateTime> endTime)
        {
            var cvnumParameter = cvnum.HasValue ?
                new ObjectParameter("cvnum", cvnum) :
                new ObjectParameter("cvnum", typeof(int));
    
            var strTimeParameter = strTime.HasValue ?
                new ObjectParameter("strTime", strTime) :
                new ObjectParameter("strTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("endTime", endTime) :
                new ObjectParameter("endTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PI_DELETE_DATERANGE_RT", cvnumParameter, strTimeParameter, endTimeParameter);
        }
    
        public virtual int SP_PI_INSERT_RT(Nullable<int> cvnum, Nullable<System.DateTime> strTime, Nullable<double> cyclenum, Nullable<double> actdur, Nullable<double> fsfwt, Nullable<double> cfwt, Nullable<double> afwt, string actcode)
        {
            var cvnumParameter = cvnum.HasValue ?
                new ObjectParameter("cvnum", cvnum) :
                new ObjectParameter("cvnum", typeof(int));
    
            var strTimeParameter = strTime.HasValue ?
                new ObjectParameter("strTime", strTime) :
                new ObjectParameter("strTime", typeof(System.DateTime));
    
            var cyclenumParameter = cyclenum.HasValue ?
                new ObjectParameter("cyclenum", cyclenum) :
                new ObjectParameter("cyclenum", typeof(double));
    
            var actdurParameter = actdur.HasValue ?
                new ObjectParameter("actdur", actdur) :
                new ObjectParameter("actdur", typeof(double));
    
            var fsfwtParameter = fsfwt.HasValue ?
                new ObjectParameter("fsfwt", fsfwt) :
                new ObjectParameter("fsfwt", typeof(double));
    
            var cfwtParameter = cfwt.HasValue ?
                new ObjectParameter("cfwt", cfwt) :
                new ObjectParameter("cfwt", typeof(double));
    
            var afwtParameter = afwt.HasValue ?
                new ObjectParameter("afwt", afwt) :
                new ObjectParameter("afwt", typeof(double));
    
            var actcodeParameter = actcode != null ?
                new ObjectParameter("actcode", actcode) :
                new ObjectParameter("actcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PI_INSERT_RT", cvnumParameter, strTimeParameter, cyclenumParameter, actdurParameter, fsfwtParameter, cfwtParameter, afwtParameter, actcodeParameter);
        }
    
        public virtual int CF_SEND_TO_PI_SUMMARY_BI(Nullable<int> cycleid)
        {
            var cycleidParameter = cycleid.HasValue ?
                new ObjectParameter("cycleid", cycleid) :
                new ObjectParameter("cycleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CF_SEND_TO_PI_SUMMARY_BI", cycleidParameter);
        }
    
        public virtual int AF_PARAM_MOULD_SP(Nullable<int> aflotid, Nullable<int> afmouldnum, Nullable<int> afparamid, Nullable<int> afwheelnum, Nullable<int> afmouldstat)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afmouldnumParameter = afmouldnum.HasValue ?
                new ObjectParameter("afmouldnum", afmouldnum) :
                new ObjectParameter("afmouldnum", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afwheelnumParameter = afwheelnum.HasValue ?
                new ObjectParameter("afwheelnum", afwheelnum) :
                new ObjectParameter("afwheelnum", typeof(int));
    
            var afmouldstatParameter = afmouldstat.HasValue ?
                new ObjectParameter("afmouldstat", afmouldstat) :
                new ObjectParameter("afmouldstat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_MOULD_SP", aflotidParameter, afmouldnumParameter, afparamidParameter, afwheelnumParameter, afmouldstatParameter);
        }
    
        public virtual int AF_PARAM_QIG_SP(Nullable<int> aflotid, Nullable<int> afparamid, Nullable<int> afqig_typeid, Nullable<int> afcw, Nullable<int> afqig_hrid, Nullable<double> afqig_pcs)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afqig_typeidParameter = afqig_typeid.HasValue ?
                new ObjectParameter("afqig_typeid", afqig_typeid) :
                new ObjectParameter("afqig_typeid", typeof(int));
    
            var afcwParameter = afcw.HasValue ?
                new ObjectParameter("afcw", afcw) :
                new ObjectParameter("afcw", typeof(int));
    
            var afqig_hridParameter = afqig_hrid.HasValue ?
                new ObjectParameter("afqig_hrid", afqig_hrid) :
                new ObjectParameter("afqig_hrid", typeof(int));
    
            var afqig_pcsParameter = afqig_pcs.HasValue ?
                new ObjectParameter("afqig_pcs", afqig_pcs) :
                new ObjectParameter("afqig_pcs", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_QIG_SP", aflotidParameter, afparamidParameter, afqig_typeidParameter, afcwParameter, afqig_hridParameter, afqig_pcsParameter);
        }
    
        public virtual ObjectResult<AFQIG_DATA_SP_Result> AFQIG_DATA_SP(Nullable<int> aflotid, Nullable<int> qigtypeid)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var qigtypeidParameter = qigtypeid.HasValue ?
                new ObjectParameter("qigtypeid", qigtypeid) :
                new ObjectParameter("qigtypeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AFQIG_DATA_SP_Result>("AFQIG_DATA_SP", aflotidParameter, qigtypeidParameter);
        }
    
        public virtual int AF_LIMS_AFLAB_DATA(Nullable<int> aflotid)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_LIMS_AFLAB_DATA", aflotidParameter);
        }
    
        public virtual ObjectResult<AF_LIMS_AFLAB_DATA_TABLE_Result> AF_LIMS_AFLAB_DATA_TABLE(Nullable<int> aflotid)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AF_LIMS_AFLAB_DATA_TABLE_Result>("AF_LIMS_AFLAB_DATA_TABLE", aflotidParameter);
        }
    
        public virtual int FSF_CREWDEFAULT_ASSIGN(Nullable<int> crewid, Nullable<int> empid1, Nullable<int> empid2, Nullable<int> empid3, Nullable<int> empid4, Nullable<int> empid5, Nullable<int> empid6, Nullable<int> empid7, Nullable<int> empid8, Nullable<int> empid9, Nullable<int> empid10, Nullable<int> empid11, Nullable<int> empid12, Nullable<int> empid13, Nullable<int> empid14, Nullable<int> empid15)
        {
            var crewidParameter = crewid.HasValue ?
                new ObjectParameter("crewid", crewid) :
                new ObjectParameter("crewid", typeof(int));
    
            var empid1Parameter = empid1.HasValue ?
                new ObjectParameter("empid1", empid1) :
                new ObjectParameter("empid1", typeof(int));
    
            var empid2Parameter = empid2.HasValue ?
                new ObjectParameter("empid2", empid2) :
                new ObjectParameter("empid2", typeof(int));
    
            var empid3Parameter = empid3.HasValue ?
                new ObjectParameter("empid3", empid3) :
                new ObjectParameter("empid3", typeof(int));
    
            var empid4Parameter = empid4.HasValue ?
                new ObjectParameter("empid4", empid4) :
                new ObjectParameter("empid4", typeof(int));
    
            var empid5Parameter = empid5.HasValue ?
                new ObjectParameter("empid5", empid5) :
                new ObjectParameter("empid5", typeof(int));
    
            var empid6Parameter = empid6.HasValue ?
                new ObjectParameter("empid6", empid6) :
                new ObjectParameter("empid6", typeof(int));
    
            var empid7Parameter = empid7.HasValue ?
                new ObjectParameter("empid7", empid7) :
                new ObjectParameter("empid7", typeof(int));
    
            var empid8Parameter = empid8.HasValue ?
                new ObjectParameter("empid8", empid8) :
                new ObjectParameter("empid8", typeof(int));
    
            var empid9Parameter = empid9.HasValue ?
                new ObjectParameter("empid9", empid9) :
                new ObjectParameter("empid9", typeof(int));
    
            var empid10Parameter = empid10.HasValue ?
                new ObjectParameter("empid10", empid10) :
                new ObjectParameter("empid10", typeof(int));
    
            var empid11Parameter = empid11.HasValue ?
                new ObjectParameter("empid11", empid11) :
                new ObjectParameter("empid11", typeof(int));
    
            var empid12Parameter = empid12.HasValue ?
                new ObjectParameter("empid12", empid12) :
                new ObjectParameter("empid12", typeof(int));
    
            var empid13Parameter = empid13.HasValue ?
                new ObjectParameter("empid13", empid13) :
                new ObjectParameter("empid13", typeof(int));
    
            var empid14Parameter = empid14.HasValue ?
                new ObjectParameter("empid14", empid14) :
                new ObjectParameter("empid14", typeof(int));
    
            var empid15Parameter = empid15.HasValue ?
                new ObjectParameter("empid15", empid15) :
                new ObjectParameter("empid15", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSF_CREWDEFAULT_ASSIGN", crewidParameter, empid1Parameter, empid2Parameter, empid3Parameter, empid4Parameter, empid5Parameter, empid6Parameter, empid7Parameter, empid8Parameter, empid9Parameter, empid10Parameter, empid11Parameter, empid12Parameter, empid13Parameter, empid14Parameter, empid15Parameter);
        }
    
        public virtual int FSF_CREWDEFAULT_Change(Nullable<int> crew_id, Nullable<int> roletype_id, Nullable<int> crew_empid)
        {
            var crew_idParameter = crew_id.HasValue ?
                new ObjectParameter("crew_id", crew_id) :
                new ObjectParameter("crew_id", typeof(int));
    
            var roletype_idParameter = roletype_id.HasValue ?
                new ObjectParameter("roletype_id", roletype_id) :
                new ObjectParameter("roletype_id", typeof(int));
    
            var crew_empidParameter = crew_empid.HasValue ?
                new ObjectParameter("crew_empid", crew_empid) :
                new ObjectParameter("crew_empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSF_CREWDEFAULT_Change", crew_idParameter, roletype_idParameter, crew_empidParameter);
        }
    
        public virtual int FSFE_MANPOWER_ASSIGN(Nullable<int> fsfeprodid, Nullable<int> empid)
        {
            var fsfeprodidParameter = fsfeprodid.HasValue ?
                new ObjectParameter("fsfeprodid", fsfeprodid) :
                new ObjectParameter("fsfeprodid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_MANPOWER_ASSIGN", fsfeprodidParameter, empidParameter);
        }
    
        public virtual int FSF_CREWLOT_Change(Nullable<int> fsfe_prod_id, Nullable<int> crew_id)
        {
            var fsfe_prod_idParameter = fsfe_prod_id.HasValue ?
                new ObjectParameter("fsfe_prod_id", fsfe_prod_id) :
                new ObjectParameter("fsfe_prod_id", typeof(int));
    
            var crew_idParameter = crew_id.HasValue ?
                new ObjectParameter("crew_id", crew_id) :
                new ObjectParameter("crew_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSF_CREWLOT_Change", fsfe_prod_idParameter, crew_idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CF_ADD_CYCLE(Nullable<int> conveterid, Nullable<int> campaignid, Nullable<double> cyclesulfur, Nullable<int> silicaformula)
        {
            var conveteridParameter = conveterid.HasValue ?
                new ObjectParameter("conveterid", conveterid) :
                new ObjectParameter("conveterid", typeof(int));
    
            var campaignidParameter = campaignid.HasValue ?
                new ObjectParameter("campaignid", campaignid) :
                new ObjectParameter("campaignid", typeof(int));
    
            var cyclesulfurParameter = cyclesulfur.HasValue ?
                new ObjectParameter("cyclesulfur", cyclesulfur) :
                new ObjectParameter("cyclesulfur", typeof(double));
    
            var silicaformulaParameter = silicaformula.HasValue ?
                new ObjectParameter("silicaformula", silicaformula) :
                new ObjectParameter("silicaformula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CF_ADD_CYCLE", conveteridParameter, campaignidParameter, cyclesulfurParameter, silicaformulaParameter);
        }
    
        public virtual ObjectResult<SP_IDENTITY_VAL_TBL_Result> SP_IDENTITY_VAL_TBL(string tablename)
        {
            var tablenameParameter = tablename != null ?
                new ObjectParameter("tablename", tablename) :
                new ObjectParameter("tablename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IDENTITY_VAL_TBL_Result>("SP_IDENTITY_VAL_TBL", tablenameParameter);
        }
    
        public virtual int AF_PARAM_CUSTOMER_SP(Nullable<int> aflotid, Nullable<int> cwid, Nullable<int> customerid)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var cwidParameter = cwid.HasValue ?
                new ObjectParameter("cwid", cwid) :
                new ObjectParameter("cwid", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_CUSTOMER_SP", aflotidParameter, cwidParameter, customeridParameter);
        }
    
        public virtual ObjectResult<AF_REFINING_PIDATA_Result> AF_REFINING_PIDATA(Nullable<int> aflotid)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AF_REFINING_PIDATA_Result>("AF_REFINING_PIDATA", aflotidParameter);
        }
    
        public virtual int AF_PARAM_INVENTORY_NUMERIC_SP(Nullable<System.DateTime> afinvdate, Nullable<int> afparamid, Nullable<double> afnumval)
        {
            var afinvdateParameter = afinvdate.HasValue ?
                new ObjectParameter("afinvdate", afinvdate) :
                new ObjectParameter("afinvdate", typeof(System.DateTime));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afnumvalParameter = afnumval.HasValue ?
                new ObjectParameter("afnumval", afnumval) :
                new ObjectParameter("afnumval", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_INVENTORY_NUMERIC_SP", afinvdateParameter, afparamidParameter, afnumvalParameter);
        }
    
        public virtual int AF_PARAM_INVENTORY_STRING_SP(Nullable<System.DateTime> afinvdate, Nullable<int> afparamid, string afstrval)
        {
            var afinvdateParameter = afinvdate.HasValue ?
                new ObjectParameter("afinvdate", afinvdate) :
                new ObjectParameter("afinvdate", typeof(System.DateTime));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afstrvalParameter = afstrval != null ?
                new ObjectParameter("afstrval", afstrval) :
                new ObjectParameter("afstrval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_INVENTORY_STRING_SP", afinvdateParameter, afparamidParameter, afstrvalParameter);
        }
    
        public virtual int Proc1(Nullable<int> userId, string s)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc1", userIdParameter, sParameter);
        }
    
        public virtual int AF_PARAM_INVENTORY_Emp_SP(Nullable<System.DateTime> afinvdate, Nullable<int> afparamid, Nullable<double> afempval)
        {
            var afinvdateParameter = afinvdate.HasValue ?
                new ObjectParameter("afinvdate", afinvdate) :
                new ObjectParameter("afinvdate", typeof(System.DateTime));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afempvalParameter = afempval.HasValue ?
                new ObjectParameter("afempval", afempval) :
                new ObjectParameter("afempval", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_INVENTORY_Emp_SP", afinvdateParameter, afparamidParameter, afempvalParameter);
        }
    
        public virtual int AF_PARAM_NUM_TARGETVAL_SP(Nullable<int> aftargetdefid, Nullable<int> afparamid, Nullable<double> aftargetmin, Nullable<double> aftargetmax, string aftargetdis)
        {
            var aftargetdefidParameter = aftargetdefid.HasValue ?
                new ObjectParameter("aftargetdefid", aftargetdefid) :
                new ObjectParameter("aftargetdefid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var aftargetminParameter = aftargetmin.HasValue ?
                new ObjectParameter("aftargetmin", aftargetmin) :
                new ObjectParameter("aftargetmin", typeof(double));
    
            var aftargetmaxParameter = aftargetmax.HasValue ?
                new ObjectParameter("aftargetmax", aftargetmax) :
                new ObjectParameter("aftargetmax", typeof(double));
    
            var aftargetdisParameter = aftargetdis != null ?
                new ObjectParameter("aftargetdis", aftargetdis) :
                new ObjectParameter("aftargetdis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_NUM_TARGETVAL_SP", aftargetdefidParameter, afparamidParameter, aftargetminParameter, aftargetmaxParameter, aftargetdisParameter);
        }
    
        public virtual int AF_TARGET_DEFAULT_SP(string afdefaultname, Nullable<int> afdefaulttype)
        {
            var afdefaultnameParameter = afdefaultname != null ?
                new ObjectParameter("afdefaultname", afdefaultname) :
                new ObjectParameter("afdefaultname", typeof(string));
    
            var afdefaulttypeParameter = afdefaulttype.HasValue ?
                new ObjectParameter("afdefaulttype", afdefaulttype) :
                new ObjectParameter("afdefaulttype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_TARGET_DEFAULT_SP", afdefaultnameParameter, afdefaulttypeParameter);
        }
    
        public virtual int AF_PARAM_NUMERIC_INT_SP(Nullable<int> aflotid, Nullable<int> afparamid, Nullable<int> afintval)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afintvalParameter = afintval.HasValue ?
                new ObjectParameter("afintval", afintval) :
                new ObjectParameter("afintval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_NUMERIC_INT_SP", aflotidParameter, afparamidParameter, afintvalParameter);
        }
    
        public virtual int Energy_MG_NUMERIC_SP(Nullable<int> enparamid, Nullable<double> ennumval, Nullable<System.DateTime> enmgdate)
        {
            var enparamidParameter = enparamid.HasValue ?
                new ObjectParameter("enparamid", enparamid) :
                new ObjectParameter("enparamid", typeof(int));
    
            var ennumvalParameter = ennumval.HasValue ?
                new ObjectParameter("ennumval", ennumval) :
                new ObjectParameter("ennumval", typeof(double));
    
            var enmgdateParameter = enmgdate.HasValue ?
                new ObjectParameter("enmgdate", enmgdate) :
                new ObjectParameter("enmgdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Energy_MG_NUMERIC_SP", enparamidParameter, ennumvalParameter, enmgdateParameter);
        }
    
        public virtual int Energy_PARAM_NUMERIC_SP(Nullable<int> enparamid, Nullable<double> ennumval)
        {
            var enparamidParameter = enparamid.HasValue ?
                new ObjectParameter("enparamid", enparamid) :
                new ObjectParameter("enparamid", typeof(int));
    
            var ennumvalParameter = ennumval.HasValue ?
                new ObjectParameter("ennumval", ennumval) :
                new ObjectParameter("ennumval", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Energy_PARAM_NUMERIC_SP", enparamidParameter, ennumvalParameter);
        }
    
        public virtual int AF_PARAM_LOT_TARGET_SP(Nullable<int> aflotid, Nullable<int> aFTargetDefaultID)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var aFTargetDefaultIDParameter = aFTargetDefaultID.HasValue ?
                new ObjectParameter("AFTargetDefaultID", aFTargetDefaultID) :
                new ObjectParameter("AFTargetDefaultID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_LOT_TARGET_SP", aflotidParameter, aFTargetDefaultIDParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_MONITOR_LOCATIONS")]
        public virtual IQueryable<FN_MONITOR_LOCATIONS_Result> FN_MONITOR_LOCATIONS(Nullable<int> sfpid)
        {
            var sfpidParameter = sfpid.HasValue ?
                new ObjectParameter("sfpid", sfpid) :
                new ObjectParameter("sfpid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_MONITOR_LOCATIONS_Result>("[PASAROperationEntities].[FN_MONITOR_LOCATIONS](@sfpid)", sfpidParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_MONITOR_POTS")]
        public virtual IQueryable<FN_MONITOR_POTS_Result> FN_MONITOR_POTS(Nullable<int> sfpid)
        {
            var sfpidParameter = sfpid.HasValue ?
                new ObjectParameter("sfpid", sfpid) :
                new ObjectParameter("sfpid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_MONITOR_POTS_Result>("[PASAROperationEntities].[FN_MONITOR_POTS](@sfpid)", sfpidParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_MONITOR_SUMMARY")]
        public virtual IQueryable<FN_MONITOR_SUMMARY_Result> FN_MONITOR_SUMMARY(Nullable<System.DateTime> date, Nullable<int> group)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var groupParameter = group.HasValue ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_MONITOR_SUMMARY_Result>("[PASAROperationEntities].[FN_MONITOR_SUMMARY](@date, @group)", dateParameter, groupParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_SFP_MONITOR_LOCATIONS")]
        public virtual IQueryable<FN_SFP_MONITOR_LOCATIONS_Result> FN_SFP_MONITOR_LOCATIONS(Nullable<int> sfpid)
        {
            var sfpidParameter = sfpid.HasValue ?
                new ObjectParameter("sfpid", sfpid) :
                new ObjectParameter("sfpid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_SFP_MONITOR_LOCATIONS_Result>("[PASAROperationEntities].[FN_SFP_MONITOR_LOCATIONS](@sfpid)", sfpidParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_SFP_MONITOR_POTS")]
        public virtual IQueryable<FN_SFP_MONITOR_POTS_Result> FN_SFP_MONITOR_POTS(Nullable<int> sfpid)
        {
            var sfpidParameter = sfpid.HasValue ?
                new ObjectParameter("sfpid", sfpid) :
                new ObjectParameter("sfpid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_SFP_MONITOR_POTS_Result>("[PASAROperationEntities].[FN_SFP_MONITOR_POTS](@sfpid)", sfpidParameter);
        }
    
        [EdmFunction("PASAROperationEntities", "FN_SFP_MONITOR_SUMMARY")]
        public virtual IQueryable<FN_SFP_MONITOR_SUMMARY_Result> FN_SFP_MONITOR_SUMMARY(Nullable<System.DateTime> date, Nullable<int> group)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var groupParameter = group.HasValue ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FN_SFP_MONITOR_SUMMARY_Result>("[PASAROperationEntities].[FN_SFP_MONITOR_SUMMARY](@date, @group)", dateParameter, groupParameter);
        }
    
        public virtual int SFP_CONSUMABLE_NUMVAL_SP(Nullable<int> shiftid, Nullable<int> paramid, Nullable<System.DateTime> dtime, Nullable<decimal> numval)
        {
            var shiftidParameter = shiftid.HasValue ?
                new ObjectParameter("shiftid", shiftid) :
                new ObjectParameter("shiftid", typeof(int));
    
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var dtimeParameter = dtime.HasValue ?
                new ObjectParameter("dtime", dtime) :
                new ObjectParameter("dtime", typeof(System.DateTime));
    
            var numvalParameter = numval.HasValue ?
                new ObjectParameter("numval", numval) :
                new ObjectParameter("numval", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_CONSUMABLE_NUMVAL_SP", shiftidParameter, paramidParameter, dtimeParameter, numvalParameter);
        }
    
        public virtual int SFP_POTS_DATA_SP(Nullable<int> locationid, Nullable<System.DateTime> dtime, Nullable<int> potid, Nullable<int> cooltime, Nullable<System.DateTime> expdtime, Nullable<System.DateTime> actualtime, string temp, string remark, Nullable<int> group, Nullable<System.DateTime> bktime)
        {
            var locationidParameter = locationid.HasValue ?
                new ObjectParameter("locationid", locationid) :
                new ObjectParameter("locationid", typeof(int));
    
            var dtimeParameter = dtime.HasValue ?
                new ObjectParameter("dtime", dtime) :
                new ObjectParameter("dtime", typeof(System.DateTime));
    
            var potidParameter = potid.HasValue ?
                new ObjectParameter("potid", potid) :
                new ObjectParameter("potid", typeof(int));
    
            var cooltimeParameter = cooltime.HasValue ?
                new ObjectParameter("cooltime", cooltime) :
                new ObjectParameter("cooltime", typeof(int));
    
            var expdtimeParameter = expdtime.HasValue ?
                new ObjectParameter("expdtime", expdtime) :
                new ObjectParameter("expdtime", typeof(System.DateTime));
    
            var actualtimeParameter = actualtime.HasValue ?
                new ObjectParameter("actualtime", actualtime) :
                new ObjectParameter("actualtime", typeof(System.DateTime));
    
            var tempParameter = temp != null ?
                new ObjectParameter("temp", temp) :
                new ObjectParameter("temp", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var groupParameter = group.HasValue ?
                new ObjectParameter("group", group) :
                new ObjectParameter("group", typeof(int));
    
            var bktimeParameter = bktime.HasValue ?
                new ObjectParameter("bktime", bktime) :
                new ObjectParameter("bktime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_POTS_DATA_SP", locationidParameter, dtimeParameter, potidParameter, cooltimeParameter, expdtimeParameter, actualtimeParameter, tempParameter, remarkParameter, groupParameter, bktimeParameter);
        }
    
        public virtual int SFP_NUM_FORECASTVAL_SP(Nullable<int> sfpparamid, Nullable<int> sfpgroup, Nullable<System.DateTime> sfpdate, Nullable<decimal> sfpnumval)
        {
            var sfpparamidParameter = sfpparamid.HasValue ?
                new ObjectParameter("sfpparamid", sfpparamid) :
                new ObjectParameter("sfpparamid", typeof(int));
    
            var sfpgroupParameter = sfpgroup.HasValue ?
                new ObjectParameter("sfpgroup", sfpgroup) :
                new ObjectParameter("sfpgroup", typeof(int));
    
            var sfpdateParameter = sfpdate.HasValue ?
                new ObjectParameter("sfpdate", sfpdate) :
                new ObjectParameter("sfpdate", typeof(System.DateTime));
    
            var sfpnumvalParameter = sfpnumval.HasValue ?
                new ObjectParameter("sfpnumval", sfpnumval) :
                new ObjectParameter("sfpnumval", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_NUM_FORECASTVAL_SP", sfpparamidParameter, sfpgroupParameter, sfpdateParameter, sfpnumvalParameter);
        }
    
        public virtual int SFP_NUM_TARGETVAL_SP(Nullable<int> sfpparamid, Nullable<int> sfpgroup, Nullable<decimal> sfpnumval)
        {
            var sfpparamidParameter = sfpparamid.HasValue ?
                new ObjectParameter("sfpparamid", sfpparamid) :
                new ObjectParameter("sfpparamid", typeof(int));
    
            var sfpgroupParameter = sfpgroup.HasValue ?
                new ObjectParameter("sfpgroup", sfpgroup) :
                new ObjectParameter("sfpgroup", typeof(int));
    
            var sfpnumvalParameter = sfpnumval.HasValue ?
                new ObjectParameter("sfpnumval", sfpnumval) :
                new ObjectParameter("sfpnumval", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_NUM_TARGETVAL_SP", sfpparamidParameter, sfpgroupParameter, sfpnumvalParameter);
        }
    
        public virtual int SFP_OLDSFP_SP(Nullable<System.DateTime> date, Nullable<int> weigherid, Nullable<int> materialid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var weigheridParameter = weigherid.HasValue ?
                new ObjectParameter("weigherid", weigherid) :
                new ObjectParameter("weigherid", typeof(int));
    
            var materialidParameter = materialid.HasValue ?
                new ObjectParameter("materialid", materialid) :
                new ObjectParameter("materialid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_OLDSFP_SP", dateParameter, weigheridParameter, materialidParameter);
        }
    
        public virtual int AF_DELETE_REASON_SP(Nullable<int> aflotid, Nullable<int> afparamid)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_DELETE_REASON_SP", aflotidParameter, afparamidParameter);
        }
    
        public virtual int AF_PARAM_REASON_SP(Nullable<int> aflotid, Nullable<int> afparamid, Nullable<int> afintval)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afintvalParameter = afintval.HasValue ?
                new ObjectParameter("afintval", afintval) :
                new ObjectParameter("afintval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_REASON_SP", aflotidParameter, afparamidParameter, afintvalParameter);
        }
    
        public virtual int SFP_BUCKETS_NUMVAL_SP(Nullable<int> paramid, Nullable<System.DateTime> dtime, Nullable<int> numval)
        {
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var dtimeParameter = dtime.HasValue ?
                new ObjectParameter("dtime", dtime) :
                new ObjectParameter("dtime", typeof(System.DateTime));
    
            var numvalParameter = numval.HasValue ?
                new ObjectParameter("numval", numval) :
                new ObjectParameter("numval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_BUCKETS_NUMVAL_SP", paramidParameter, dtimeParameter, numvalParameter);
        }
    
        public virtual int SFP_DELETE_BUCKETS_SP(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_DELETE_BUCKETS_SP", dateParameter);
        }
    
        public virtual int SFP_CREWDEFAULT_SP(Nullable<int> crewid, Nullable<int> roletypeid, Nullable<int> empid)
        {
            var crewidParameter = crewid.HasValue ?
                new ObjectParameter("crewid", crewid) :
                new ObjectParameter("crewid", typeof(int));
    
            var roletypeidParameter = roletypeid.HasValue ?
                new ObjectParameter("roletypeid", roletypeid) :
                new ObjectParameter("roletypeid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_CREWDEFAULT_SP", crewidParameter, roletypeidParameter, empidParameter);
        }
    
        public virtual int SFP_MANPOWER_SP(Nullable<int> shiftassignid, Nullable<int> roletypeid, Nullable<int> empid)
        {
            var shiftassignidParameter = shiftassignid.HasValue ?
                new ObjectParameter("shiftassignid", shiftassignid) :
                new ObjectParameter("shiftassignid", typeof(int));
    
            var roletypeidParameter = roletypeid.HasValue ?
                new ObjectParameter("roletypeid", roletypeid) :
                new ObjectParameter("roletypeid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_MANPOWER_SP", shiftassignidParameter, roletypeidParameter, empidParameter);
        }
    
        public virtual int SFP_SHIFTASSIGN_SP(Nullable<System.DateTime> date, Nullable<int> shiftid, Nullable<int> crewid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var shiftidParameter = shiftid.HasValue ?
                new ObjectParameter("shiftid", shiftid) :
                new ObjectParameter("shiftid", typeof(int));
    
            var crewidParameter = crewid.HasValue ?
                new ObjectParameter("crewid", crewid) :
                new ObjectParameter("crewid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_SHIFTASSIGN_SP", dateParameter, shiftidParameter, crewidParameter);
        }
    
        public virtual int FSF_CREWDEFAULT_SP(Nullable<int> crewid, Nullable<int> roletypeid, Nullable<int> empid)
        {
            var crewidParameter = crewid.HasValue ?
                new ObjectParameter("crewid", crewid) :
                new ObjectParameter("crewid", typeof(int));
    
            var roletypeidParameter = roletypeid.HasValue ?
                new ObjectParameter("roletypeid", roletypeid) :
                new ObjectParameter("roletypeid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSF_CREWDEFAULT_SP", crewidParameter, roletypeidParameter, empidParameter);
        }
    
        public virtual int FSFE_CREWASSIGN_SP(Nullable<int> prodid, Nullable<int> crewid)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(int));
    
            var crewidParameter = crewid.HasValue ?
                new ObjectParameter("crewid", crewid) :
                new ObjectParameter("crewid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_CREWASSIGN_SP", prodidParameter, crewidParameter);
        }
    
        public virtual ObjectResult<string> FSFE_DSI_EDIT_IMAGES(Nullable<int> fsfe_fdsi_id, string fsfe_inspectiontime, string fsfe_remarks, string fsfe_mode, string fsfe_file_ext)
        {
            var fsfe_fdsi_idParameter = fsfe_fdsi_id.HasValue ?
                new ObjectParameter("fsfe_fdsi_id", fsfe_fdsi_id) :
                new ObjectParameter("fsfe_fdsi_id", typeof(int));
    
            var fsfe_inspectiontimeParameter = fsfe_inspectiontime != null ?
                new ObjectParameter("fsfe_inspectiontime", fsfe_inspectiontime) :
                new ObjectParameter("fsfe_inspectiontime", typeof(string));
    
            var fsfe_remarksParameter = fsfe_remarks != null ?
                new ObjectParameter("fsfe_remarks", fsfe_remarks) :
                new ObjectParameter("fsfe_remarks", typeof(string));
    
            var fsfe_modeParameter = fsfe_mode != null ?
                new ObjectParameter("fsfe_mode", fsfe_mode) :
                new ObjectParameter("fsfe_mode", typeof(string));
    
            var fsfe_file_extParameter = fsfe_file_ext != null ?
                new ObjectParameter("fsfe_file_ext", fsfe_file_ext) :
                new ObjectParameter("fsfe_file_ext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FSFE_DSI_EDIT_IMAGES", fsfe_fdsi_idParameter, fsfe_inspectiontimeParameter, fsfe_remarksParameter, fsfe_modeParameter, fsfe_file_extParameter);
        }
    
        public virtual ObjectResult<string> FSFE_DSI_IMAGES(Nullable<int> fsfe_prodid, string fsfe_inspectiontime, Nullable<int> fsfe_paramid, string fsfe_remarks, string fsfe_mode, string fsfe_file_ext)
        {
            var fsfe_prodidParameter = fsfe_prodid.HasValue ?
                new ObjectParameter("fsfe_prodid", fsfe_prodid) :
                new ObjectParameter("fsfe_prodid", typeof(int));
    
            var fsfe_inspectiontimeParameter = fsfe_inspectiontime != null ?
                new ObjectParameter("fsfe_inspectiontime", fsfe_inspectiontime) :
                new ObjectParameter("fsfe_inspectiontime", typeof(string));
    
            var fsfe_paramidParameter = fsfe_paramid.HasValue ?
                new ObjectParameter("fsfe_paramid", fsfe_paramid) :
                new ObjectParameter("fsfe_paramid", typeof(int));
    
            var fsfe_remarksParameter = fsfe_remarks != null ?
                new ObjectParameter("fsfe_remarks", fsfe_remarks) :
                new ObjectParameter("fsfe_remarks", typeof(string));
    
            var fsfe_modeParameter = fsfe_mode != null ?
                new ObjectParameter("fsfe_mode", fsfe_mode) :
                new ObjectParameter("fsfe_mode", typeof(string));
    
            var fsfe_file_extParameter = fsfe_file_ext != null ?
                new ObjectParameter("fsfe_file_ext", fsfe_file_ext) :
                new ObjectParameter("fsfe_file_ext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FSFE_DSI_IMAGES", fsfe_prodidParameter, fsfe_inspectiontimeParameter, fsfe_paramidParameter, fsfe_remarksParameter, fsfe_modeParameter, fsfe_file_extParameter);
        }
    
        public virtual int FSFE_INSERT_EquipmentIssues(Nullable<int> paramId, Nullable<int> prodId, Nullable<System.DateTime> paramDate, string fSFE_Param_Value)
        {
            var paramIdParameter = paramId.HasValue ?
                new ObjectParameter("ParamId", paramId) :
                new ObjectParameter("ParamId", typeof(int));
    
            var prodIdParameter = prodId.HasValue ?
                new ObjectParameter("ProdId", prodId) :
                new ObjectParameter("ProdId", typeof(int));
    
            var paramDateParameter = paramDate.HasValue ?
                new ObjectParameter("ParamDate", paramDate) :
                new ObjectParameter("ParamDate", typeof(System.DateTime));
    
            var fSFE_Param_ValueParameter = fSFE_Param_Value != null ?
                new ObjectParameter("FSFE_Param_Value", fSFE_Param_Value) :
                new ObjectParameter("FSFE_Param_Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_INSERT_EquipmentIssues", paramIdParameter, prodIdParameter, paramDateParameter, fSFE_Param_ValueParameter);
        }
    
        public virtual int FSFE_PARAM_EMP_SP(Nullable<int> fsfe_paramid, Nullable<int> fsfe_prodid, Nullable<int> fsfe_empid)
        {
            var fsfe_paramidParameter = fsfe_paramid.HasValue ?
                new ObjectParameter("fsfe_paramid", fsfe_paramid) :
                new ObjectParameter("fsfe_paramid", typeof(int));
    
            var fsfe_prodidParameter = fsfe_prodid.HasValue ?
                new ObjectParameter("fsfe_prodid", fsfe_prodid) :
                new ObjectParameter("fsfe_prodid", typeof(int));
    
            var fsfe_empidParameter = fsfe_empid.HasValue ?
                new ObjectParameter("fsfe_empid", fsfe_empid) :
                new ObjectParameter("fsfe_empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_PARAM_EMP_SP", fsfe_paramidParameter, fsfe_prodidParameter, fsfe_empidParameter);
        }
    
        public virtual ObjectResult<string> FSFE_PATTERN_DSI_IMAGES(Nullable<int> fsfe_prodid, string fsfe_inspectiontime, Nullable<int> fsfe_paramid, string fsfe_remarks, string fsfe_mode, string fsfe_file_ext)
        {
            var fsfe_prodidParameter = fsfe_prodid.HasValue ?
                new ObjectParameter("fsfe_prodid", fsfe_prodid) :
                new ObjectParameter("fsfe_prodid", typeof(int));
    
            var fsfe_inspectiontimeParameter = fsfe_inspectiontime != null ?
                new ObjectParameter("fsfe_inspectiontime", fsfe_inspectiontime) :
                new ObjectParameter("fsfe_inspectiontime", typeof(string));
    
            var fsfe_paramidParameter = fsfe_paramid.HasValue ?
                new ObjectParameter("fsfe_paramid", fsfe_paramid) :
                new ObjectParameter("fsfe_paramid", typeof(int));
    
            var fsfe_remarksParameter = fsfe_remarks != null ?
                new ObjectParameter("fsfe_remarks", fsfe_remarks) :
                new ObjectParameter("fsfe_remarks", typeof(string));
    
            var fsfe_modeParameter = fsfe_mode != null ?
                new ObjectParameter("fsfe_mode", fsfe_mode) :
                new ObjectParameter("fsfe_mode", typeof(string));
    
            var fsfe_file_extParameter = fsfe_file_ext != null ?
                new ObjectParameter("fsfe_file_ext", fsfe_file_ext) :
                new ObjectParameter("fsfe_file_ext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FSFE_PATTERN_DSI_IMAGES", fsfe_prodidParameter, fsfe_inspectiontimeParameter, fsfe_paramidParameter, fsfe_remarksParameter, fsfe_modeParameter, fsfe_file_extParameter);
        }
    
        public virtual int SPP_DEFAULT_NUMERIC_SP(Nullable<int> paramid, Nullable<double> numval)
        {
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var numvalParameter = numval.HasValue ?
                new ObjectParameter("numval", numval) :
                new ObjectParameter("numval", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPP_DEFAULT_NUMERIC_SP", paramidParameter, numvalParameter);
        }
    
        public virtual int SPP_HEADER_NONNUMERIC_SP(Nullable<int> prodid, Nullable<int> paramid, string strval)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(int));
    
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var strvalParameter = strval != null ?
                new ObjectParameter("strval", strval) :
                new ObjectParameter("strval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPP_HEADER_NONNUMERIC_SP", prodidParameter, paramidParameter, strvalParameter);
        }
    
        public virtual int SPP_HEADER_NUMERIC_SP(Nullable<int> prodid, Nullable<int> paramid, Nullable<double> numval)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(int));
    
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var numvalParameter = numval.HasValue ?
                new ObjectParameter("numval", numval) :
                new ObjectParameter("numval", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPP_HEADER_NUMERIC_SP", prodidParameter, paramidParameter, numvalParameter);
        }
    
        public virtual int SPP_PARAM_NUMERIC_SP(Nullable<int> prodid, Nullable<int> timeseriesid, Nullable<int> paramid, Nullable<double> numval)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(int));
    
            var timeseriesidParameter = timeseriesid.HasValue ?
                new ObjectParameter("timeseriesid", timeseriesid) :
                new ObjectParameter("timeseriesid", typeof(int));
    
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var numvalParameter = numval.HasValue ?
                new ObjectParameter("numval", numval) :
                new ObjectParameter("numval", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPP_PARAM_NUMERIC_SP", prodidParameter, timeseriesidParameter, paramidParameter, numvalParameter);
        }
    
        public virtual int SPP_PARAM_STR_SP(Nullable<int> prodid, Nullable<int> timeseriesid, Nullable<int> paramid, string strval)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(int));
    
            var timeseriesidParameter = timeseriesid.HasValue ?
                new ObjectParameter("timeseriesid", timeseriesid) :
                new ObjectParameter("timeseriesid", typeof(int));
    
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var strvalParameter = strval != null ?
                new ObjectParameter("strval", strval) :
                new ObjectParameter("strval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPP_PARAM_STR_SP", prodidParameter, timeseriesidParameter, paramidParameter, strvalParameter);
        }
    
        public virtual int SPP_PRODPLAN_SP(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPP_PRODPLAN_SP", dateParameter);
        }
    
        public virtual int FSFE_NUM_TARGETVAL_SP(Nullable<int> fSFEparamid, Nullable<int> fSFEgroup, Nullable<decimal> fSFEnumval)
        {
            var fSFEparamidParameter = fSFEparamid.HasValue ?
                new ObjectParameter("FSFEparamid", fSFEparamid) :
                new ObjectParameter("FSFEparamid", typeof(int));
    
            var fSFEgroupParameter = fSFEgroup.HasValue ?
                new ObjectParameter("FSFEgroup", fSFEgroup) :
                new ObjectParameter("FSFEgroup", typeof(int));
    
            var fSFEnumvalParameter = fSFEnumval.HasValue ?
                new ObjectParameter("FSFEnumval", fSFEnumval) :
                new ObjectParameter("FSFEnumval", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_NUM_TARGETVAL_SP", fSFEparamidParameter, fSFEgroupParameter, fSFEnumvalParameter);
        }
    
        public virtual int SFP_COMMENTS_STRVAL_SP(Nullable<int> paramid, Nullable<System.DateTime> dtime, string strval)
        {
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var dtimeParameter = dtime.HasValue ?
                new ObjectParameter("dtime", dtime) :
                new ObjectParameter("dtime", typeof(System.DateTime));
    
            var strvalParameter = strval != null ?
                new ObjectParameter("strval", strval) :
                new ObjectParameter("strval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_COMMENTS_STRVAL_SP", paramidParameter, dtimeParameter, strvalParameter);
        }
    
        public virtual int FSFE_COMMENTS_STRVAL_SP(Nullable<int> paramid, Nullable<System.DateTime> dtime, string strval)
        {
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var dtimeParameter = dtime.HasValue ?
                new ObjectParameter("dtime", dtime) :
                new ObjectParameter("dtime", typeof(System.DateTime));
    
            var strvalParameter = strval != null ?
                new ObjectParameter("strval", strval) :
                new ObjectParameter("strval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_COMMENTS_STRVAL_SP", paramidParameter, dtimeParameter, strvalParameter);
        }
    
        public virtual int SFP_COMMENTS_STRVAL_SP1(Nullable<int> paramid, Nullable<System.DateTime> dtime, string strval)
        {
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var dtimeParameter = dtime.HasValue ?
                new ObjectParameter("dtime", dtime) :
                new ObjectParameter("dtime", typeof(System.DateTime));
    
            var strvalParameter = strval != null ?
                new ObjectParameter("strval", strval) :
                new ObjectParameter("strval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_COMMENTS_STRVAL_SP1", paramidParameter, dtimeParameter, strvalParameter);
        }
    
        public virtual int AF_MANPOWER_SP(Nullable<int> prodid, Nullable<int> roletypeid, Nullable<int> empid, Nullable<int> empAId, Nullable<int> empBId)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(int));
    
            var roletypeidParameter = roletypeid.HasValue ?
                new ObjectParameter("roletypeid", roletypeid) :
                new ObjectParameter("roletypeid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var empAIdParameter = empAId.HasValue ?
                new ObjectParameter("EmpAId", empAId) :
                new ObjectParameter("EmpAId", typeof(int));
    
            var empBIdParameter = empBId.HasValue ?
                new ObjectParameter("EmpBId", empBId) :
                new ObjectParameter("EmpBId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_MANPOWER_SP", prodidParameter, roletypeidParameter, empidParameter, empAIdParameter, empBIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AF_PRODID_CHANGE(Nullable<System.DateTime> af_date, Nullable<int> af_shift_id)
        {
            var af_dateParameter = af_date.HasValue ?
                new ObjectParameter("af_date", af_date) :
                new ObjectParameter("af_date", typeof(System.DateTime));
    
            var af_shift_idParameter = af_shift_id.HasValue ?
                new ObjectParameter("af_shift_id", af_shift_id) :
                new ObjectParameter("af_shift_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AF_PRODID_CHANGE", af_dateParameter, af_shift_idParameter);
        }
    
        public virtual int AF_SHIFTASSIGN_SP(Nullable<System.DateTime> date, Nullable<int> shiftid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var shiftidParameter = shiftid.HasValue ?
                new ObjectParameter("shiftid", shiftid) :
                new ObjectParameter("shiftid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_SHIFTASSIGN_SP", dateParameter, shiftidParameter);
        }
    
        public virtual int FSFE_BUILDUP_DAILY_NUM_SP(Nullable<int> fsfe_paramid, Nullable<System.DateTime> fsfe_date, Nullable<int> fsfe_numval)
        {
            var fsfe_paramidParameter = fsfe_paramid.HasValue ?
                new ObjectParameter("fsfe_paramid", fsfe_paramid) :
                new ObjectParameter("fsfe_paramid", typeof(int));
    
            var fsfe_dateParameter = fsfe_date.HasValue ?
                new ObjectParameter("fsfe_date", fsfe_date) :
                new ObjectParameter("fsfe_date", typeof(System.DateTime));
    
            var fsfe_numvalParameter = fsfe_numval.HasValue ?
                new ObjectParameter("fsfe_numval", fsfe_numval) :
                new ObjectParameter("fsfe_numval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_BUILDUP_DAILY_NUM_SP", fsfe_paramidParameter, fsfe_dateParameter, fsfe_numvalParameter);
        }
    
        public virtual int FSFE_BUILDUP_SHIFT_NUM_SP(Nullable<int> fsfe_paramid, Nullable<int> fsfe_prodid, Nullable<int> fsfe_numval)
        {
            var fsfe_paramidParameter = fsfe_paramid.HasValue ?
                new ObjectParameter("fsfe_paramid", fsfe_paramid) :
                new ObjectParameter("fsfe_paramid", typeof(int));
    
            var fsfe_prodidParameter = fsfe_prodid.HasValue ?
                new ObjectParameter("fsfe_prodid", fsfe_prodid) :
                new ObjectParameter("fsfe_prodid", typeof(int));
    
            var fsfe_numvalParameter = fsfe_numval.HasValue ?
                new ObjectParameter("fsfe_numval", fsfe_numval) :
                new ObjectParameter("fsfe_numval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FSFE_BUILDUP_SHIFT_NUM_SP", fsfe_paramidParameter, fsfe_prodidParameter, fsfe_numvalParameter);
        }
    
        public virtual int SFP_SHIFTDPMCOMMENTS_SP(Nullable<int> paramid, Nullable<System.DateTime> date, Nullable<int> shiftid, string strval)
        {
            var paramidParameter = paramid.HasValue ?
                new ObjectParameter("paramid", paramid) :
                new ObjectParameter("paramid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var shiftidParameter = shiftid.HasValue ?
                new ObjectParameter("shiftid", shiftid) :
                new ObjectParameter("shiftid", typeof(int));
    
            var strvalParameter = strval != null ?
                new ObjectParameter("strval", strval) :
                new ObjectParameter("strval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFP_SHIFTDPMCOMMENTS_SP", paramidParameter, dateParameter, shiftidParameter, strvalParameter);
        }
    
        public virtual int AF_REWORKEDANODES_SP(Nullable<System.DateTime> afdate, Nullable<int> aflotid, Nullable<double> afnumval)
        {
            var afdateParameter = afdate.HasValue ?
                new ObjectParameter("afdate", afdate) :
                new ObjectParameter("afdate", typeof(System.DateTime));
    
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afnumvalParameter = afnumval.HasValue ?
                new ObjectParameter("afnumval", afnumval) :
                new ObjectParameter("afnumval", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_REWORKEDANODES_SP", afdateParameter, aflotidParameter, afnumvalParameter);
        }
    
        public virtual int AF_AnodeCharged_SP(Nullable<System.DateTime> afdate, Nullable<int> aflotid, Nullable<double> afweight, Nullable<int> afpcs)
        {
            var afdateParameter = afdate.HasValue ?
                new ObjectParameter("afdate", afdate) :
                new ObjectParameter("afdate", typeof(System.DateTime));
    
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afweightParameter = afweight.HasValue ?
                new ObjectParameter("afweight", afweight) :
                new ObjectParameter("afweight", typeof(double));
    
            var afpcsParameter = afpcs.HasValue ?
                new ObjectParameter("afpcs", afpcs) :
                new ObjectParameter("afpcs", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_AnodeCharged_SP", afdateParameter, aflotidParameter, afweightParameter, afpcsParameter);
        }
    
        public virtual int AF_Logs_NumVal_SP(Nullable<int> aflotid, Nullable<int> aftimelogid, Nullable<int> afparamid, Nullable<double> afnumval)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var aftimelogidParameter = aftimelogid.HasValue ?
                new ObjectParameter("aftimelogid", aftimelogid) :
                new ObjectParameter("aftimelogid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afnumvalParameter = afnumval.HasValue ?
                new ObjectParameter("afnumval", afnumval) :
                new ObjectParameter("afnumval", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_Logs_NumVal_SP", aflotidParameter, aftimelogidParameter, afparamidParameter, afnumvalParameter);
        }
    
        public virtual int AF_PARAM_MOULDREPLACEMENT_SP(Nullable<int> aflotid, Nullable<int> afmouldnum, Nullable<int> afcastingwheel)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afmouldnumParameter = afmouldnum.HasValue ?
                new ObjectParameter("afmouldnum", afmouldnum) :
                new ObjectParameter("afmouldnum", typeof(int));
    
            var afcastingwheelParameter = afcastingwheel.HasValue ?
                new ObjectParameter("afcastingwheel", afcastingwheel) :
                new ObjectParameter("afcastingwheel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_MOULDREPLACEMENT_SP", aflotidParameter, afmouldnumParameter, afcastingwheelParameter);
        }
    
        public virtual int AF_PARAM_TIMELOG_SP(Nullable<int> aflotid, Nullable<int> afparamid, Nullable<System.DateTime> afstarttime, Nullable<System.DateTime> afendtime)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var afparamidParameter = afparamid.HasValue ?
                new ObjectParameter("afparamid", afparamid) :
                new ObjectParameter("afparamid", typeof(int));
    
            var afstarttimeParameter = afstarttime.HasValue ?
                new ObjectParameter("afstarttime", afstarttime) :
                new ObjectParameter("afstarttime", typeof(System.DateTime));
    
            var afendtimeParameter = afendtime.HasValue ?
                new ObjectParameter("afendtime", afendtime) :
                new ObjectParameter("afendtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AF_PARAM_TIMELOG_SP", aflotidParameter, afparamidParameter, afstarttimeParameter, afendtimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AF_TIMELOG_SP(Nullable<int> aflotid, Nullable<int> castingwheelid, Nullable<int> afactivityid, Nullable<System.DateTime> afstarttime, Nullable<System.DateTime> afendtime, string afremarks, Nullable<int> aftabid)
        {
            var aflotidParameter = aflotid.HasValue ?
                new ObjectParameter("aflotid", aflotid) :
                new ObjectParameter("aflotid", typeof(int));
    
            var castingwheelidParameter = castingwheelid.HasValue ?
                new ObjectParameter("castingwheelid", castingwheelid) :
                new ObjectParameter("castingwheelid", typeof(int));
    
            var afactivityidParameter = afactivityid.HasValue ?
                new ObjectParameter("afactivityid", afactivityid) :
                new ObjectParameter("afactivityid", typeof(int));
    
            var afstarttimeParameter = afstarttime.HasValue ?
                new ObjectParameter("afstarttime", afstarttime) :
                new ObjectParameter("afstarttime", typeof(System.DateTime));
    
            var afendtimeParameter = afendtime.HasValue ?
                new ObjectParameter("afendtime", afendtime) :
                new ObjectParameter("afendtime", typeof(System.DateTime));
    
            var afremarksParameter = afremarks != null ?
                new ObjectParameter("afremarks", afremarks) :
                new ObjectParameter("afremarks", typeof(string));
    
            var aftabidParameter = aftabid.HasValue ?
                new ObjectParameter("aftabid", aftabid) :
                new ObjectParameter("aftabid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AF_TIMELOG_SP", aflotidParameter, castingwheelidParameter, afactivityidParameter, afstarttimeParameter, afendtimeParameter, afremarksParameter, aftabidParameter);
        }
    }
}
